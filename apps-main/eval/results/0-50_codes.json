{"0": ["\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n", "\ns = input()\n\nif s.count('|') == 0:\n    print(len(s))\nelse:\n    print(-1)\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(max_accordion_length(s))\n\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n", "\nThe maximum possible length of the resulting accordion is $4$.\n\n", "\n", "\n", "\ns = input()\n\nprint(len(s) if s.count('|') == 1 else -1)\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\n    exit()\n\nif len(s) == 1:\n    print(1)\n    exit()\n\nif len(s) == 2:\n    if s == ':|':\n        print(1)\n        exit()\n    if s == '||:':\n        print(1)\n        exit()\n    if s == '|||':\n        print(1)\n        exit()\n    if s == '||':\n        print(1)\n        exit()\n    if s == '||:':\n        print(1)\n        exit()\n    if s == '|:':\n        print(1)\n        exit()\n    if s == '|':\n        print(1)\n        exit()\n    if s == '|:':\n        print(1)\n        exit()\n    if s == '|:|':\n        print(1)\n        exit()\n    if s == '|:|:':\n        print(1)\n        exit()\n    if s == '|:|:|':\n        print(1)\n        exit()\n    if s == '|:|:|:':\n        print(1)\n        exit()\n    if s == '|:|:|:|':\n        print(1)\n        exit()\n    if s == '|:|:|:|:':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|:':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|:|':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|:|:':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|:|:|':\n        print(1)\n        exit()\n    if s == '|:|:|:|:|:|:|:':\n        print(1)\n        exit()\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n\n", "\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n\n", "\n", "\ns = input()\n\nif s.count(':') == 0:\n    print(0)\nelif s.count(':') == 1:\n    print(len(s))\nelse:\n    print(-1)\n", "\ns = input()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == '':\n    print(-1)\nelse:\n    print(len(s))\n", "\n", "\ns = input()\n\nif s.count('|') == 0:\n    print(len(s))\nelse:\n    print(-1)\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif len(s) == 0:\n    print(-1)\nelse:\n    print(len(s))\n"], "1": ["\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef sum_digits(x):\n    sum = 0\n    while x > 0:\n        sum += x % 10\n        x //= 10\n    return sum\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef find_max_sum_of_digits(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum = 0\n        for j in str(i):\n            sum += int(j)\n        if sum > max_sum:\n            max_sum = sum\n    return max_sum\n\nprint(find_max_sum_of_digits(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\nmax_sum = 0\nmax_sum_num = 0\n\nfor i in range(1, x + 1):\n    sum_num = 0\n    for j in str(i):\n        sum_num += int(j)\n    if sum_num > max_sum:\n        max_sum = sum_num\n        max_sum_num = i\n\nprint(max_sum_num)\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    max_sum = 0\n    max_sum_digit = 0\n    for i in range(1, x + 1):\n        sum_digit = 0\n        for j in str(i):\n            sum_digit += int(j)\n        if sum_digit > max_sum:\n            max_sum = sum_digit\n            max_sum_digit = i\n    return max_sum_digit\n\nprint(max_sum(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum_of_digits(x):\n    max_sum = 0\n    max_sum_digit = 0\n    for i in range(1, x + 1):\n        sum_digit = 0\n        for j in str(i):\n            sum_digit += int(j)\n        if sum_digit > max_sum:\n            max_sum = sum_digit\n            max_sum_digit = i\n    return max_sum_digit\n\nprint(max_sum_of_digits(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    if x == 0:\n        return 0\n    if x < 10:\n        return x\n    \n    max_sum = 0\n    for i in range(10, x+1):\n        max_sum = max(max_sum, max_sum(i-1) + i)\n    return max_sum\n\nprint(max_sum(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\nmax_sum = 0\nmax_num = 0\n\nfor i in range(1, x + 1):\n    sum = 0\n    for j in str(i):\n        sum += int(j)\n    if sum > max_sum:\n        max_sum = sum\n        max_num = i\n\nprint(max_num)\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum = 0\n        for j in str(i):\n            sum += int(j)\n        if sum > max_sum:\n            max_sum = sum\n    return max_sum\n\nprint(max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum_digits(x):\n    max_sum = 0\n    max_sum_digit = 0\n    for i in range(1, x + 1):\n        sum_digit = 0\n        while i > 0:\n            sum_digit += i % 10\n            i = i // 10\n        if sum_digit > max_sum:\n            max_sum = sum_digit\n            max_sum_digit = i\n    return max_sum_digit\n\nprint(max_sum_digits(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef find_max_sum_of_digits(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum_of_digits = 0\n        while i > 0:\n            sum_of_digits += i % 10\n            i = i // 10\n        if sum_of_digits > max_sum:\n            max_sum = sum_of_digits\n    return max_sum\n\nprint(find_max_sum_of_digits(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef find_max_sum(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum_digits = 0\n        for j in str(i):\n            sum_digits += int(j)\n        if sum_digits > max_sum:\n            max_sum = sum_digits\n    return max_sum\n\nprint(find_max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef find_max_sum_of_digits(x):\n    max_sum = 0\n    max_sum_digit = 0\n    for i in range(1, x + 1):\n        sum_of_digits = 0\n        while i > 0:\n            sum_of_digits += i % 10\n            i = i // 10\n        if sum_of_digits > max_sum:\n            max_sum = sum_of_digits\n            max_sum_digit = i\n    return max_sum_digit\n\nprint(find_max_sum_of_digits(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    max_sum = 0\n    for i in range(1, x+1):\n        sum_digits = 0\n        for j in str(i):\n            sum_digits += int(j)\n        if sum_digits > max_sum:\n            max_sum = sum_digits\n    return max_sum\n\nprint(max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\nmax_sum = 0\nmax_sum_digit = 0\n\nfor i in range(1, x + 1):\n    sum_digit = 0\n    for j in str(i):\n        sum_digit += int(j)\n    if sum_digit > max_sum:\n        max_sum = sum_digit\n        max_sum_digit = i\n\nprint(max_sum_digit)\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum_digits(x):\n    max_sum = 0\n    max_sum_digit = 0\n    for i in range(1, x + 1):\n        sum_digits = 0\n        while i > 0:\n            sum_digits += i % 10\n            i = i // 10\n        if sum_digits > max_sum:\n            max_sum = sum_digits\n            max_sum_digit = i\n    return max_sum_digit\n\nprint(max_sum_digits(x))\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    max_sum = 0\n    for i in range(1,x+1):\n        sum_digits = 0\n        for j in str(i):\n            sum_digits += int(j)\n        if sum_digits > max_sum:\n            max_sum = sum_digits\n    return max_sum\n\nprint(max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef get_max_sum(x):\n    max_sum = 0\n    for i in range(1, x+1):\n        sum = 0\n        for j in str(i):\n            sum += int(j)\n        if sum > max_sum:\n            max_sum = sum\n    return max_sum\n\nprint(get_max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef max_sum(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum = 0\n        for j in str(i):\n            sum += int(j)\n        if sum > max_sum:\n            max_sum = sum\n    return max_sum\n\nprint(max_sum(x))\n\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\nmax_sum = 0\nmax_digit = 0\n\nfor i in range(1, x + 1):\n    sum_of_digits = 0\n    for digit in str(i):\n        sum_of_digits += int(digit)\n    if sum_of_digits > max_sum:\n        max_sum = sum_of_digits\n        max_digit = i\n\nprint(max_digit)\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\ndef find_max_sum(x):\n    max_sum = 0\n    for i in range(1, x + 1):\n        sum = 0\n        while i > 0:\n            sum += i % 10\n            i //= 10\n        if sum > max_sum:\n            max_sum = sum\n    return max_sum\n\nprint(find_max_sum(x))\n\n"], "2": ["\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n + 1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n)\n    for i in range(n, n+1):\n        if str(i).count('1') == 0:\n            print(i)\n            break\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n % 4 == 0:\n    print(n + 1)\nelif n % 4 == 1:\n    print(n + 2)\nelif n % 4 == 2:\n    print(n + 3)\nelse:\n    print(n + 4)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelif n % 100 == 0:\n    print(n)\nelif n % 10 == 1:\n    print(n + 1)\nelif n % 10 == 2:\n    print(n + 2)\nelif n % 10 == 3:\n    print(n + 3)\nelif n % 10 == 4:\n    print(n + 4)\nelif n % 10 == 5:\n    print(n + 5)\nelif n % 10 == 6:\n    print(n + 6)\nelif n % 10 == 7:\n    print(n + 7)\nelif n % 10 == 8:\n    print(n + 8)\nelif n % 10 == 9:\n    print(n + 9)\nelse:\n    print(n + 10)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelif n < 100:\n    print(1)\nelif n < 1000:\n    print(1)\nelif n < 10000:\n    print(2)\nelif n < 100000:\n    print(2)\nelif n < 1000000:\n    print(3)\nelif n < 10000000:\n    print(3)\nelif n < 100000000:\n    print(4)\nelif n < 1000000000:\n    print(4)\nelif n < 10000000000:\n    print(5)\nelif n < 1000000000000:\n    print(5)\nelse:\n    print(6)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n-1)\n\n", "\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn = int(input())\n\nif n % 4 == 0:\n    print(n + 1)\nelse:\n    print(n)\n\nn", "\nn = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    n = n - 1\n    while n > 0:\n        if n % 10 == 0:\n            n = n // 10\n        else:\n            n = n - 1\n    print(n)\n", "\nn = int(input())\n\nif n % 4 == 0:\n    if n % 100 == 0:\n        if n % 400 == 0:\n            print(n)\n        else:\n            print(n + 1)\n    else:\n        print(n)\nelse:\n    print(n + 1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n + 1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n+1)\n", "\nn = int(input())\n\nif n % 4 == 0:\n    if n % 100 == 0:\n        if n % 400 == 0:\n            print(n)\n        else:\n            print(n + 1)\n    else:\n        print(n + 1)\nelse:\n    print(n)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n + 1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n-1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n // 100)\n    print(n % 100)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nif n == 0:\n    print(0)\nelse:\n    print(n-1)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n)\n\n", "\nn = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    print(n-1)\n", "\nn = int(input())\n\nif n == 0:\n    print(0)\nelse:\n    print(n + 1)\n"], "3": ["\nn,q=map(int,input().split())\n\nl=[int(i) for i in input().split()]\nr=[int(i) for i in input().split()]\n\nl.sort()\nr.sort()\n\nans=0\n\nfor i in range(q):\n    if l[i]<=r[i]:\n        ans+=1\n\nprint(ans)\n", "\nimport sys\n\nn, q = map(int, sys.stdin.readline().split())\n\nsections = []\n\nfor i in range(q):\n    l, r = map(int, sys.stdin.readline().split())\n    sections.append((l, r))\n\nsections.sort()\n\nmax_sections = 0\n\nfor i in range(q):\n    l, r = sections[i]\n    if l >= r:\n        continue\n    max_sections = max(max_sections, r - l + 1)\n\nprint(max_sections)\n", "\nn,q=map(int,input().split())\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[1])\nprint(l)\n\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[1])\n", "\nn,q=map(int,input().split())\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[1])\nprint(l)\n\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[1])\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nif q<=2:\n    print(n)\nelse:\n    count=0\n    for i in range(q-2):\n        if l<=r:\n            count+=1\n            l=l+1\n        else:\n            l=l+1\n            r=r-1\n    print(count)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nfor i in range(q):\n    l,r=map(int,input().split())\n    if l<=r:\n        print(r-l)\n    else:\n        print(n-l+1)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nl=l\nr=r\n\nfor i in range(q):\n    l,r=map(int,input().split())\n    if l<=r:\n        l=l\n        r=r\n    else:\n        l=l\n        r=r\n\nprint(r-l+1)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nl,r=l,r\n\nif q<=2:\n    print(q)\n    exit()\n\nif q>=n:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n\nif q>=n-q+2:\n    print(n)\n    exit()\n", "\nn,q=map(int,input().split())\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\n\nl.sort(key=lambda x:x[0])\n\nl.sort(key=lambda x:x[1])\n\nl.sort(key=lambda x:x[0])\n\nl.sort(key=lambda x:x[1])\n\nprint(l[0][0])\n", "\nn,q=map(int,input().split())\n\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\n\nl.sort(key=lambda x:x[0])\n\nans=0\nfor i in range(q):\n    if l[i][0]>=l[i][1]:\n        ans+=1\nprint(ans)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nl,r=l,r\n\nif q<=2:\n    print(n)\nelse:\n    print(n-2)\n", "\n", "\nn,q=map(int,input().split())\n\nl,r=map(int,input().split())\n\np=[]\n\nfor i in range(q):\n    l,r=map(int,input().split())\n    p.append([l,r])\n\np.sort()\n\nans=0\n\nfor i in range(q):\n    if p[i][0]<=l and p[i][1]>=r:\n        ans+=1\n\nprint(ans)\n", "\nn,q=map(int,input().split())\n\nl,r=map(int,input().split())\n\np=[]\n\nfor i in range(q):\n    l,r=map(int,input().split())\n    p.append([l,r])\n\np.sort(key=lambda x:x[1])\n\nans=0\n\nfor i in range(q):\n    if p[i][0]<=l and p[i][1]>=r:\n        ans+=1\n\nprint(ans)\n", "\nn,q=map(int,input().split())\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\n\nl.sort(key=lambda x:x[0])\nl.sort(key=lambda x:x[1])\n\nprint(l)\n\nfor i in range(q):\n    if l[i][0]<=l[i][1]:\n        print(l[i][0])\n        break\n    else:\n        print(l[i][1])\n        break\n\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\np=[]\nfor i in range(q):\n    p.append(list(map(int,input().split())))\n\np.sort(key=lambda x:x[0])\n\nans=0\nfor i in range(q):\n    if p[i][0]>=l and p[i][1]<=r:\n        ans+=1\nprint(ans)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nif q<=2:\n    print(n)\nelse:\n    print(n-2)\n", "\nimport sys\n\nn, q = map(int, sys.stdin.readline().split())\n\npainters = []\n\nfor i in range(q):\n    painters.append(list(map(int, sys.stdin.readline().split())))\n\npainters.sort(key=lambda x: x[0])\n\nmax_painted = 0\n\nfor i in range(q):\n    painted = 0\n    for j in range(i):\n        if painters[i][0] >= painters[j][1] and painters[i][1] <= painters[j][1]:\n            painted += 1\n    max_painted = max(max_painted, painted)\n\nprint(max_painted)\n", "\nn,q=map(int,input().split())\nl,r=map(int,input().split())\n\nfor i in range(q):\n    l,r=map(int,input().split())\n    if l<=r:\n        print(r-l)\n    else:\n        print(n-l+1)\n", "\nn,q=map(int,input().split())\nl=[]\nfor i in range(q):\n    l.append(list(map(int,input().split())))\n\nl.sort(key=lambda x:x[0])\n\nans=0\nfor i in range(q):\n    if l[i][1]>=l[i][0]:\n        ans+=1\nprint(ans)\n"], "4": ["\nimport math\n\nx = int(input())\n\nhh = int(input())\nmm = int(input())\n\nhh_min = hh * 60\n\nhh_min_l = math.floor(hh_min)\nhh_min_u = math.ceil(hh_min)\n\nhh_min_l_str = str(hh_min_l)\nhh_min_u_str = str(hh_min_u)\n\nif hh_min_l_str[0] == '0':\n    hh_min_l_str = hh_min_l_str[1:]\n\nif hh_min_u_str[0] == '0':\n    hh_min_u_str = hh_min_u_str[1:]\n\nif hh_min_l_str == hh_min_u_str:\n    print(0)\nelse:\n    print(hh_min_u - hh_min_l)\n", "\nimport sys\n\nx = int(sys.stdin.readline())\n\nhh, mm = map(int, sys.stdin.readline().split())\n\nif hh == 0 and mm == 0:\n    print(0)\n\nelif hh == 0 and mm == 1:\n    print(0)\n\nelif hh == 1 and mm == 0:\n    print(0)\n\nelif hh == 1 and mm == 1:\n    print(0)\n\nelse:\n    if hh > 23 or mm > 59:\n        print(0)\n    else:\n        if hh == 0 and mm == 0:\n            print(0)\n        elif hh == 0 and mm == 1:\n            print(0)\n        elif hh == 1 and mm == 0:\n            print(0)\n        elif hh == 1 and mm == 1:\n            print(0)\n        else:\n            if hh < 10:\n                hh = '0' + str(hh)\n            if mm < 10:\n                mm = '0' + str(mm)\n            if hh == 0 and mm == 0:\n                print(0)\n            elif hh == 0 and mm == 1:\n                print(0)\n            elif hh == 1 and mm == 0:\n                print(0)\n            elif hh == 1 and mm == 1:\n                print(0)\n            else:\n                if hh < 10:\n                    hh = '0' + str(hh)\n                if mm < 10:\n                    mm = '0' + str(mm)\n                if hh == 0 and mm == 0:\n                    print(0)\n                elif hh == 0 and mm == 1:\n                    print(0)\n                elif hh == 1 and mm == 0:\n                    print(0)\n                elif hh == 1 and mm == 1:\n                    print(0)\n                else:\n                    if hh < 10:\n                        hh = '0' + str(hh)\n                    if mm < 10:\n                        mm = '0' + str(mm)\n                    if hh == 0 and mm == 0:\n                        print(0)\n                    ", "\n", "\n", "\n", "\nimport math\n\nx = int(input())\n\nhh, mm = map(int, input().split())\n\nif hh == 0 and mm == 0:\n    print(0)\nelse:\n    hh = hh % 24\n    mm = mm % 60\n    if hh == 0 and mm == 0:\n        print(0)\n    else:\n        if hh < 10:\n            hh = '0' + str(hh)\n        if mm < 10:\n            mm = '0' + str(mm)\n        if hh == 0 and mm == 0:\n            print(0)\n        else:\n            if hh < 10:\n                hh = '0' + str(hh)\n            if mm < 10:\n                mm = '0' + str(mm)\n            if hh == 0 and mm == 0:\n                print(0)\n            else:\n                if hh < 10:\n                    hh = '0' + str(hh)\n                if mm < 10:\n                    mm = '0' + str(mm)\n                if hh == 0 and mm == 0:\n                    print(0)\n                else:\n                    if hh < 10:\n                        hh = '0' + str(hh)\n                    if mm < 10:\n                        mm = '0' + str(mm)\n                    if hh == 0 and mm == 0:\n                        print(0)\n                    else:\n                        if hh < 10:\n                            hh = '0' + str(hh)\n                        if mm < 10:\n                            mm = '0' + str(mm)\n                        if hh == 0 and mm == 0:\n                            print(0)\n                        else:\n                            if hh < 10:\n                                hh = '0' + str(hh)\n                            if mm < 10:\n                                mm = '0' + str(mm)\n                            if hh == 0 and mm == 0:\n                                print(0)\n                            else:\n                                if hh < 10:\n                                    hh = '0' + str(hh)\n                                if mm < 10:\n                                    mm = '0' + str(mm)\n                                if hh == 0 and mm == 0:\n                                    print(0", "\nimport sys\n\nx = int(sys.stdin.readline())\nhh = int(sys.stdin.readline())\nmm = int(sys.stdin.readline())\n\nif hh == 0 and mm == 0:\n    print(0)\n\nelif hh == 0 and mm == 1:\n    print(1)\n\nelif hh == 1 and mm == 0:\n    print(2)\n\nelif hh == 1 and mm == 1:\n    print(3)\n\nelif hh == 2 and mm == 0:\n    print(4)\n\nelif hh == 2 and mm == 1:\n    print(5)\n\nelif hh == 3 and mm == 0:\n    print(6)\n\nelif hh == 3 and mm == 1:\n    print(7)\n\nelif hh == 4 and mm == 0:\n    print(8)\n\nelif hh == 4 and mm == 1:\n    print(9)\n\nelif hh == 5 and mm == 0:\n    print(10)\n\nelif hh == 5 and mm == 1:\n    print(11)\n\nelif hh == 6 and mm == 0:\n    print(12)\n\nelif hh == 6 and mm == 1:\n    print(13)\n\nelif hh == 7 and mm == 0:\n    print(14)\n\nelif hh == 7 and mm == 1:\n    print(15)\n\nelif hh == 8 and mm == 0:\n    print(16)\n\nelif hh == 8 and mm == 1:\n    print(17)\n\nelif hh == 9 and mm == 0:\n    print(18)\n\nelif hh == 9 and mm == 1:\n    print(19)\n\nelif hh == 10 and mm == 0:\n    print(20)\n\nelif hh == 10 and mm == 1:\n    print(21)\n\nelif hh == 11 and mm == 0:\n    print(22)\n\nelif hh == 11 and mm == 1:\n    print(23)\n\nelif hh == 12 and mm == 0:\n", "\nimport math\n\nx = int(input())\n\nhh = int(input())\n\nmm = int(input())\n\nhh_mm = hh * 60 + mm\n\nif hh_mm < 7 * 60:\n    print(0)\nelse:\n    print(math.ceil((hh_mm - 7 * 60) / 60))\n", "\nimport math\n\nx = int(input())\n\nhh = int(input())\n\nmm = int(input())\n\nif hh < 7:\n    if mm < hh:\n        print(0)\n    else:\n        print(math.ceil((hh - mm) / 60))\nelse:\n    if mm < hh:\n        print(math.ceil((hh - mm) / 60))\n    else:\n        print(0)\n", "\nimport math\n\nx = int(input())\n\nhh = int(input())\nmm = int(input())\n\nhh_min = hh * 60 + mm\n\nhh_max = hh * 60 + (mm + 60)\n\ncount = 0\n\nwhile hh_min <= hh_max:\n    hh_min = hh_min + (hh * 60 + mm)\n    count += 1\n\nprint(count)\n\n", "\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\n", "\nimport math\n\ndef find_lucky_time(x, hh, mm):\n    return math.ceil(x / 60 / hh * mm)\n\nx = int(input())\nhh, mm = map(int, input().split())\nprint(find_lucky_time(x, hh, mm))\n", "\nimport math\n\nx = int(input())\n\nhh, mm = map(int, input().split())\n\nif hh == 0 and mm == 0:\n    print(0)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(0)\n    exit()\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 0:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 0:\n    hh = 23\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif hh == 23 and mm == 59:\n    hh = 0\n    mm = 59\n\nif hh == 0 and mm == 59:\n    hh = 23\n    mm = 0\n\nif", "\nimport math\n\nx = int(input())\nhh, mm = map(int, input().split())\n\nif hh == 0 and mm == 0:\n    print(0)\nelse:\n    if hh == 0 and mm == 1:\n        print(1)\n    else:\n        if hh == 0 and mm == 2:\n            print(2)\n        else:\n            if hh == 0 and mm == 3:\n                print(3)\n            else:\n                if hh == 0 and mm == 4:\n                    print(4)\n                else:\n                    if hh == 0 and mm == 5:\n                        print(5)\n                    else:\n                        if hh == 0 and mm == 6:\n                            print(6)\n                        else:\n                            if hh == 0 and mm == 7:\n                                print(7)\n                            else:\n                                if hh == 0 and mm == 8:\n                                    print(8)\n                                else:\n                                    if hh == 0 and mm == 9:\n                                        print(9)\n                                    else:\n                                        if hh == 0 and mm == 10:\n                                            print(10)\n                                        else:\n                                            if hh == 0 and mm == 11:\n                                                print(11)\n                                            else:\n                                                if hh == 0 and mm == 12:\n                                                    print(12)\n                                                else:\n                                                    if hh == 0 and mm == 13:\n                                                        print(13)\n                                                    else:\n                                                        if hh == 0 and mm == 14:\n                                                            print(14)\n                                                        else:\n                                                            if hh == 0 and mm == 15:\n                                                                print(15)\n                                                            else:\n                                                                if hh == 0 and mm == 16:\n                                                                    print(16)\n                                                                else:\n                                                                    if hh == 0 and mm == 17", "\nimport math\n\nx = int(input())\n\nhh, mm = map(int, input().split())\n\nif hh == 0 and mm == 0:\n    print(0)\nelse:\n    if hh == 0 and mm == 1:\n        print(1)\n    else:\n        if hh == 1 and mm == 0:\n            print(1)\n        else:\n            if hh == 1 and mm == 1:\n                print(2)\n            else:\n                if hh == 2 and mm == 0:\n                    print(1)\n                else:\n                    if hh == 2 and mm == 1:\n                        print(2)\n                    else:\n                        if hh == 3 and mm == 0:\n                            print(1)\n                        else:\n                            if hh == 3 and mm == 1:\n                                print(2)\n                            else:\n                                if hh == 4 and mm == 0:\n                                    print(1)\n                                else:\n                                    if hh == 4 and mm == 1:\n                                        print(2)\n                                    else:\n                                        if hh == 5 and mm == 0:\n                                            print(1)\n                                        else:\n                                            if hh == 5 and mm == 1:\n                                                print(2)\n                                            else:\n                                                if hh == 6 and mm == 0:\n                                                    print(1)\n                                                else:\n                                                    if hh == 6 and mm == 1:\n                                                        print(2)\n                                                    else:\n                                                        if hh == 7 and mm == 0:\n                                                            print(1)\n                                                        else:\n                                                            if hh == 7 and mm == 1:\n                                                                print(2)\n                                                            else:\n                                                                if hh == 8 and mm == 0:\n                                                                    print(1)\n                                                                else:\n                                                                    if hh == 8 and mm ==", "\nimport math\n\nx = int(input())\n\nhh = int(input())\n\nmm = int(input())\n\nhh = hh * 60\n\nmm = mm * 60\n\nhh = hh + mm\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\nhh = hh / 60\n\nhh = hh - x\n\nhh = math.floor(hh)\n\n", "\nimport math\n\nx = int(input())\n\nhh, mm = map(int, input().split())\n\nif hh == 0 and mm == 0:\n    print(0)\n    exit()\n\nif hh == 0 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(0)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif hh == 23 and mm == 59:\n    print(1)\n    exit()\n\nif", "\nimport math\n\ndef main():\n    x = int(input())\n    hh, mm = map(int, input().split())\n    print(math.ceil(x/60/hh*60/mm))\n\nif __name__ == '__main__':\n    main()\n"], "5": ["\n", "\nfrom math import inf\n\nn, pos, l, r = map(int, input().split())\n\nif n == 1:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)", "\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\nelse:\n    if l == 1:\n        print(0)\n    else:\n        if pos == 1:\n            print(n - l)\n        else:\n            print(min(n - pos, n - r) + max(l - 1, r - pos))\n", "\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\nelse:\n    print(n - max(l, pos) - min(r, pos))\n", "\nimport math\n\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l > r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif n == 1:\n    print(0)\n    exit()\n\nif n == 2:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 3:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 4:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 5:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 6:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 7:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 8:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 9:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 10:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 11:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 12:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 13:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 14:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 15:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif n == 16:\n    print(math.ceil(math.log(n, 2)))\n    exit()\n\nif", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.read().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r - 1:\n    print(0)\n    exit()\n\nif l == r + 1:\n    print(0)\n    exit()\n\nif l == r - 2:\n    print(0)\n    exit()\n\nif l == r + 2:\n    print(0)\n    exit()\n\nif l == r - 3:\n    print(0)\n    exit()\n\nif l == r + 3:\n    print(0)\n    exit()\n\nif l == r - 4:\n    print(0)\n    exit()\n\nif l == r + 4:\n    print(0)\n    exit()\n\nif l == r - 5:\n    print(0)\n    exit()\n\nif l == r + 5:\n    print(0)\n    exit()\n\nif l == r - 6:\n    print(0)\n    exit()\n\nif l == r + 6:\n    print(0)\n    exit()\n\nif l == r - 7:\n    print(0)\n    exit()\n\nif l == r + 7:\n    print(0)\n    exit()\n\nif l == r - 8:\n    print(0)\n    exit()\n\nif l == r + 8:\n    print(0)\n    exit()\n\nif l == r - 9:\n    print(0)\n    exit()\n\nif l == r + 9:\n    print(0)\n    exit()\n\nif l == r - 10:\n    print(0)\n    exit()\n\nif l == r + 10:\n    print(0)\n    exit()\n\nif l == r - 11:\n    print(0)\n    exit()\n\nif l == r + 11:\n    print(0)\n    exit()\n\nif l == r - 12:\n    print(0)\n    exit()\n\nif l == r + 12:\n    print(0)\n    exit()\n\nif l == r - 13:\n    print(", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == pos:\n    ", "\nimport math\n\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    ", "\nimport math\n\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    ", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l > r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    print(0)\n    exit()\n\nif l < pos:\n    print(0)\n    exit()\n\nif l > pos:\n    ", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\nif n == 1:\n    print(0)\nelse:\n    if l == 1:\n        if r == n:\n            print(0)\n        else:\n            print(min(n - 1, r - 1))\n    else:\n        if r == n:\n            print(0)\n        else:\n            print(min(n - 1, r - 1))\n", "\nimport math\n\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\nelse:\n    if l == 1:\n        print(math.ceil(n / 2))\n    else:\n        print(math.ceil(n / 2) + 1)\n", "\nn, pos, l, r = map(int, input().split())\n\nif pos == 1:\n    print(0)\nelse:\n    print(min(n, pos, l, r) - 1)\n", "\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\nelse:\n    print(min(n - pos, r - l - 1))\n", "\nimport math\n\nn, pos, l, r = map(int, input().split())\n\nif l == r:\n    print(0)\nelse:\n    if l == 1:\n        print(math.ceil(n/2))\n    else:\n        print(math.ceil(n/2) + 1)\n", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.read().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l > r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == r:\n    print(0)\n    exit()\n\nif l < pos < r:\n    print(0)\n    exit()\n\nif l < pos <= r:\n    print(0)\n    exit()\n\nif l <= pos < r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\n", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\nif l == r:\n    print(0)\nelse:\n    print(n - max(l, pos) - min(r, pos) + 1)\n\n", "\nimport sys\n\nn, pos, l, r = map(int, sys.stdin.readline().split())\n\nif l == r:\n    print(0)\n    exit()\n\nif l > r:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l == pos:\n    print(0)\n    exit()\n\nif r == pos:\n    print(0)\n    exit()\n\nif l < pos < r:\n    print(0)\n    exit()\n\nif l < pos <= r:\n    print(0)\n    exit()\n\nif l <= pos < r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif l <= pos <= r:\n    print(0)\n    exit()\n\nif", "\nfrom sys import stdin\n\nn, pos, l, r = map(int, stdin.readline().split())\n\nif l == r:\n    print(0)\nelse:\n    print(min(pos - 1, max(l, pos + 1)) - l + 1)\n\n", "\nfrom sys import stdin\n\nn, pos, l, r = map(int, stdin.readline().split())\n\nif l == r:\n    print(0)\nelse:\n    print(min(n - pos, r - max(pos - l, 1)))\n"], "6": [], "7": [], "8": [], "9": [], "10": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "11": ["\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\n\nif (a % n == 0) and (b % n == 0):\n    print(p*n + q*n)\nelif (a % n == 0):\n    print(p*n + q*n)\nelif (b % n == 0):\n    print(p*n + q*n)\nelse:\n    print(p*n + q*n)\n\n", "\nimport sys\n\nn,a,b,p,q=map(int,sys.stdin.readline().split())\n\nprint((n*(n-1)*p+n*q)//2)\n\n", "\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\n\nprint(n//a + n//b + p*q)\n", "\nn,a,b,p,q=map(int,input().split())\n\nif(n%a==0 or n%b==0):\n    print(p+q)\nelse:\n    print(p)\n\n", "\n", "\n", "\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\n\nif (a % n == 0 and b % n == 0):\n    print(p * n + q * n)\nelif (a % n == 0):\n    print(p * n + q * n)\nelif (b % n == 0):\n    print(p * n + q * n)\nelse:\n    print(p * n + q * n)\n", "\nn,a,b,p,q=map(int,input().split())\n\nans=0\nfor i in range(1,n+1):\n    if i%a==0 and i%b==0:\n        ans+=p\n    elif i%a==0:\n        ans+=q\n    elif i%b==0:\n        ans+=p\n    else:\n        ans+=q\nprint(ans)\n", "\n", "\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\n\nprint(n//a + n//b + p*n + q*n)\n\n", "\n", "\n", "\nn,a,b,p,q=map(int,input().split())\n\nif(a%n==0 and b%n==0):\n    print(p*n+q*n)\nelse:\n    print(p*n+q*n)\n\n", "\nimport sys\n\nn, a, b, p, q = map(int, sys.stdin.readline().split())\n\nif (n % a == 0 and n % b == 0) or (n % a == 0 and n % b!= 0) or (n % a!= 0 and n % b == 0) or (n % a!= 0 and n % b!= 0):\n    print(p * n + q * (n - 1))\nelse:\n    print(p * n + q * (n - 1))\n\n", "\nimport sys\n\nn,a,b,p,q=map(int,sys.stdin.readline().split())\n\nif (n%a==0 and n%b==0) or (n%a==0 and n%b!=0) or (n%a!=0 and n%b==0):\n    print(p*n)\nelse:\n    print(q*n)\n", "\nn,a,b,p,q=map(int,input().split())\n\nif(a%n==0 or b%n==0):\n    if(a%n==0):\n        print(p*n)\n    else:\n        print(q*n)\nelse:\n    print(p+q)\n\n", "\n", "\n", "\n", "\n"], "12": ["\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden_trophies = sys.stdin.readline().strip()\n\ngolden_trophies = golden_trophies.split()\n\ngolden_trophies = list(map(int, golden_trophies))\n\ngolden_trophies.sort()\n\nswaps = 0\n\nwhile True:\n    if len(golden_trophies) == 1:\n        break\n    if golden_trophies[0] == golden_trophies[1]:\n        golden_trophies.pop(0)\n        golden_trophies.pop(0)\n        swaps += 1\n    else:\n        break\n\nprint(swaps)\n\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ntrophies = trophies.replace('G','1').replace('S','0')\n\nprint(len(trophies))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden_trophies = sys.stdin.readline().strip()\n\ngolden_trophies = golden_trophies.replace('G', 'S')\n\ngolden_trophies = golden_trophies.replace('S', 'G')\n\nprint(len(golden_trophies))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies)\n\ntrophies = list(trophies", "\n", "\nn = int(input())\n\ntrophies = input()\n\nmax_beauty = 0\n\nfor i in range(n):\n    if trophies[i] == 'G':\n        max_beauty = max(max_beauty, i + 1)\n\nprint(max_beauty)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ngolden_trophies = 0\n\nsilver_trophies = 0\n\nfor i in range(n):\n    if trophies[i] == \"G\":\n        golden_trophies += 1\n    else:\n        silver_trophies += 1\n\nif golden_trophies > silver_trophies:\n    print(golden_trophies)\nelif golden_trophies < silver_trophies:\n    print(silver_trophies)\nelse:\n    print(0)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden = []\n\nfor i in range(n):\n    golden.append(sys.stdin.readline().strip())\n\ngolden.sort()\n\ndef longest_subsegment(golden):\n    if len(golden) == 1:\n        return len(golden[0])\n    \n    length = 0\n    for i in range(len(golden)-1):\n        if golden[i] == golden[i+1]:\n            length += len(golden[i])\n        else:\n            break\n    return length\n\nprint(longest_subsegment(golden))\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden_trophies = sys.stdin.readline().strip()\n\ngolden_trophies = golden_trophies.upper()\n\nmax_beauty = 0\n\nfor i in range(n):\n    if golden_trophies[i] == 'G':\n        max_beauty = max(max_beauty, len(golden_trophies[i:]) - 1)\n\nprint(max_beauty)\n\n", "\nimport sys\n\nn = int(input())\n\ntrophies = input()\n\ngolden_trophies = 0\nsilver_trophies = 0\n\nfor i in range(n):\n    if trophies[i] == 'G':\n        golden_trophies += 1\n    else:\n        silver_trophies += 1\n\nif golden_trophies > silver_trophies:\n    print(golden_trophies)\nelif golden_trophies < silver_trophies:\n    print(silver_trophies)\nelse:\n    print(0)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden_trophies = sys.stdin.readline().strip()\n\ngolden_trophies = golden_trophies.replace('G', '1').replace('S', '0')\n\ngolden_trophies = list(golden_trophies)\n\ngolden_trophies = list(map(int, golden_trophies))\n\ngolden_trophies.sort()\n\nprint(len(golden_trophies))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ntrophies = list(trophies)\n\ntrophies_length = len(trophies)\n\nif trophies_length == 1:\n    print(0)\n\nelse:\n    swaps = 0\n    while True:\n        for i in range(trophies_length - 1):\n            if trophies[i]!= 'G' and trophies[i + 1]!= 'G':\n                trophies[i], trophies[i + 1] = trophies[i + 1], trophies[i]\n                swaps += 1\n                break\n        else:\n            break\n\n    if swaps == 0:\n        print(0)\n    else:\n        print(swaps)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden_trophies = sys.stdin.readline().strip()\n\ngolden_trophies = golden_trophies.replace('G', '1')\ngolden_trophies = golden_trophies.replace('S', '0')\n\ngolden_trophies = list(golden_trophies)\n\ngolden_trophies = list(map(int, golden_trophies))\n\ngolden_trophies.sort()\n\nprint(len(golden_trophies))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden = []\n\nfor i in range(n):\n    golden.append(sys.stdin.readline().strip())\n\ngolden = list(golden)\n\ndef length(golden):\n    length = 0\n    for i in range(len(golden)):\n        if golden[i] == \"G\":\n            length += 1\n    return length\n\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ntrophies = trophies.replace('G', '1')\ntrophies = trophies.replace('S', '0')\n\ntrophies = list(trophies)\n\ntrophies.sort()\n\nprint(len(trophies))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ngolden = []\n\nfor i in range(n):\n    golden.append(sys.stdin.readline().strip())\n\ngolden.sort()\n\nprint(len(golden))\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\narr = sys.stdin.readline().strip()\n\ngolden_trophies = 0\n\nsilver_trophies = 0\n\nfor i in range(n):\n    if arr[i] == 'G':\n        golden_trophies += 1\n    else:\n        silver_trophies += 1\n\nif golden_trophies > silver_trophies:\n    print(golden_trophies)\nelse:\n    print(silver_trophies)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ntrophies = sys.stdin.readline().strip()\n\ngolden_trophies = 0\n\nsilver_trophies = 0\n\nfor i in range(n):\n    if trophies[i] == 'G':\n        golden_trophies += 1\n    else:\n        silver_trophies += 1\n\nif golden_trophies > silver_trophies:\n    print(golden_trophies)\nelif golden_trophies < silver_trophies:\n    print(silver_trophies)\nelse:\n    print(0)\n\n"], "13": [], "14": [], "15": ["\n", "\n", "\ns = list(map(int, input().split()))\n\nif s[0] == a:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif b in s:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif all(x > a for x in s):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif all(x > b for x in s):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\n", "\n", "\n", "\ns = input()\n\ns = s.split()\n\na = int(s[0])\n\nb = int(s[1])\n\nc = int(s[2])\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b and a!= c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a!= b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a!= b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a!= b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a > b and a!= c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a > b and a > c and a!= b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a > b and a > c and a > b and a!= c:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a > b and a > c and a > b and a > c and a!= b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a > b and a > c and a > b and a > c and a > b and a > c and a > b and a > c and a >", "\n", "\n", "\n", "\n", "\n", "\ns = input().split()\n\nif int(s[0]) == int(s[1]):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\n", "\n", "\n", "\n", "\n", "\n", "\ns = input().split()\na, b, c = int(s[0]), int(s[1]), int(s[2])\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nif a == b:\n    print(\"YES\")\nelse:\n    print"], "16": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "17": [], "18": ["\ns=input()\n\ns=s[::-1]\n\nprint(s)\n\ns=s[::-1]\n\n", "\ns = input()\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns = 'acdb'\n\ns = 'cab'\n\ns", "\ns = input()\n\nprint(s[0] + s[-1] + s[1:-1] + s[0] + s[-1])\n\n", "\ns = input()\n\nprint(s[:len(s)-1]+s[-1]+s[:len(s)-1])\n\n", "\ns=input()\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n", "\ns = input()\n\nif len(s) <= 10:\n    print(s)\nelse:\n    print(s[0] + s[-1])\n", "\ns=input()\n\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n\n", "\ns = input()\n\ns = \"cab\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns = \"acdb\"\n\ns", "\ns=input()\ns=sorted(s)\nprint(s[0]+s[-1])\n\n", "\ns=input()\n\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n", "\ns=input()\nl=len(s)\nu=''\nt=''\nfor i in range(l):\n    u=u+s[i]\n    t=t+s[l-i-1]\nprint(u)\n", "\ns=input()\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n", "\ns = input()\n\nif len(s) > 10**5:\n    print('Too long')\nelse:\n    if len(s) == 0:\n        print('Empty')\n    else:\n        if len(s) == 1:\n            print(s[0])\n        else:\n            print(s[0], s[1])\n", "\ns = input()\n\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n\n", "\ns = input()\n\ns = s[::-1]\n\nprint(s)\n\n", "\ns=input()\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n", "\ns = input()\n\nprint(s[0]+s[-1]+s[1:-1]+s[0]+s[-1])\n\n", "\ns = input()\n\nif len(s) <= 10**5:\n    print(s[0] + s[-1])\nelse:\n    print(s[0] + s[-2] + s[-1])\n", "\ns = input()\n\nprint(s[0] + s[-1] + s[1:-1] + s[0] + s[-1])\n\n", "\ns=input()\nu=''\nwhile(s!=''):\n    if(len(s)>1):\n        u=u+s[0]\n        s=s[1:]\n    else:\n        u=u+s\n    print(u)\n    s=input()\n"], "19": [], "20": ["\n", "\nimport math\n\ndef main():\n    h, m = input().split(':')\n    h = int(h)\n    m = int(m)\n    if is_palindrome(h, m):\n        print(0)\n    else:\n        print(math.ceil((h * 60 + m) / 2))\n\n", "\nimport math\n\ndef is_palindrome(string):\n    return string == string[::-1]\n\n", "\nimport math\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\n", "\nimport sys\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\n", "\nimport sys\n\ndef isPalindrome(string):\n    if len(string) <= 1:\n        return True\n    else:\n        if string[0] == string[-1]:\n            return isPalindrome(string[1:-1])\n        else:\n            return False\n\n", "\nimport math\n\ndef get_minutes(time):\n    return int(time[0:2])*60 + int(time[3:])\n\n", "\nimport sys\n\ndef isPalindrome(s):\n    if len(s) <= 1:\n        return True\n    else:\n        return s[0] == s[-1] and isPalindrome(s[1:-1])\n\n", "\nimport sys\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\n", "\n", "\n", "\nimport math\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\n", "\nimport sys\n\ndef isPalindrome(s):\n    return s == s[::-1]\n\n", "\n", "\n", "\n", "\n", "\nimport math\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\n", "\nimport math\n\ndef isPalindrome(string):\n    return string == string[::-1]\n\n", "\nimport sys\n\ndef isPalindrome(s):\n    if len(s) <= 1:\n        return True\n    else:\n        return s[0] == s[-1] and isPalindrome(s[1:-1])\n\n"], "21": ["\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\na.sort()\n\nprint(a[-1] - a[0])\n\n", "\nimport sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nprint(sys.maxsize)\n", "\nimport math\n\ndef swap(a, i, j):\n    temp = a[i]\n    a[i] = a[j]\n    a[j] = temp\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nprint(min(a) - max(a))\n\n", "\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\n\nprint(min(a) - max(a))\n\n", "\nimport math\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min_max_distance(a))\n\n", "\nimport sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_dist = 0\nmin_dist = sys.maxsize\n\nfor i in range(n):\n    min_dist = min(min_dist, abs(a[i] - i))\n    max_dist = max(max_dist, abs(a[i] - i))\n\nprint(max_dist - min_dist)\n", "\n", "\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nprint(a[-1] - a[0])\n\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_idx = 0\nmax_idx = n - 1\n\nwhile min_idx < max_idx:\n    if a[min_idx] > a[max_idx]:\n        a[min_idx], a[max_idx] = a[max_idx], a[min_idx]\n    else:\n        min_idx += 1\n\nprint(a[0], a[n - 1])\n\n", "\nimport math\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(min_max_distance(a))\n\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nmin_idx = 0\nmax_idx = n-1\n\nwhile min_idx < max_idx:\n    if a[min_idx] < a[max_idx]:\n        min_idx += 1\n    else:\n        max_idx -= 1\n\nprint(max_idx - min_idx + 1)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_pos = 1\nmax_pos = n\n\nfor i in range(1, n):\n    if a[i] < a[min_pos]:\n        min_pos = i\n    if a[i] > a[max_pos]:\n        max_pos = i\n\nprint(max_pos - min_pos + 1)\n\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nprint(min(a) - max(a))\n\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nmin_pos = 1\nmax_pos = n\n\nfor i in range(n):\n    if a[i] < min_pos:\n        min_pos = a[i]\n\nfor i in range(n):\n    if a[i] > max_pos:\n        max_pos = a[i]\n\nprint(max_pos - min_pos)\n\n"], "22": ["\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\nif s == s[::-1]:\n    print('TAK')\nelse:\n    print('NIE')\n\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\nif s == s[::-1]:\n    print('TAK')\nelse:\n    print('NIE')\n", "\ns=input()\nif s==s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n", "\ns = input()\n\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n\n", "\ns = input()\n\nif s == s[::-1]:\n    print('TAK')\nelse:\n    print('NIE')\n\n", "\ns = input()\nif s == s[::-1]:\n    print(\"TAK\")\nelse:\n    print(\"NIE\")\n"], "23": ["\na = int(input())\nb = int(input())\n\n", "\na = int(input())\nb = int(input())\n\nif a > b:\n    print(a)\nelse:\n    while a > b:\n        a = a*10 + a%10\n    print(a)\n\n", "\na = int(input())\nb = int(input())\n\na = str(a)\nb = str(b)\n\na = list(a)\nb = list(b)\n\na.sort()\nb.sort()\n\na = ''.join(a)\nb = ''.join(b)\n\nif int(a) > int(b):\n    print(a)\nelse:\n    print(b)\n\nprint(a)\n", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 10:\n        return a\n    if b < 10:\n        return b\n    if a < b:\n        return b\n    if a > b:\n        return a\n    if a == b:\n        return a\n    if a > b:\n        return b\n    if a < b:\n        return a\n\nprint(permute(a, b))\n\n", "\na = int(input())\nb = int(input())\n\nmax_num = 0\n\nfor i in range(1, 10):\n    for j in range(1, 10):\n        num = str(i) + str(j) + str(i)\n        if int(num) <= b and int(num) > max_num:\n            max_num = int(num)\n\nprint(max_num)\n\n", "\na = int(input())\nb = int(input())\n\na_list = list(str(a))\nb_list = list(str(b))\n\na_list.sort()\nb_list.sort()\n\nif a_list == b_list:\n    print(a)\nelse:\n    for i in range(len(a_list)):\n        if a_list[i]!= b_list[i]:\n            a_list[i], a_list[i+1] = a_list[i+1], a_list[i]\n            break\n    print(''.join(a_list))\n", "\na = int(input())\nb = int(input())\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\n", "\na = int(input())\nb = int(input())\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\nif a > b:\n    print(a)\n", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 10:\n        return a\n    \n    if a % 10 == 0:\n        return permute(a // 10, b)\n    \n    if a % 10!= 0:\n        return permute(a // 10, b) + permute(a % 10, b)\n\nprint(permute(a, b))\n\n", "\na = int(input())\nb = int(input())\n\ndef permute(a,b):\n    if a == 0:\n        return 0\n    if a < 0 or b < 0:\n        return 0\n    if a > b:\n        return 0\n    if a == 1:\n        return b\n    if a == 2:\n        return b\n    if a == 3:\n        return b\n    if a == 4:\n        return b\n    if a == 5:\n        return b\n    if a == 6:\n        return b\n    if a == 7:\n        return b\n    if a == 8:\n        return b\n    if a == 9:\n        return b\n    if a == 10:\n        return b\n    if a == 11:\n        return b\n    if a == 12:\n        return b\n    if a == 13:\n        return b\n    if a == 14:\n        return b\n    if a == 15:\n        return b\n    if a == 16:\n        return b\n    if a == 17:\n        return b\n    if a == 18:\n        return b\n    if a == 19:\n        return b\n    if a == 20:\n        return b\n    if a == 21:\n        return b\n    if a == 22:\n        return b\n    if a == 23:\n        return b\n    if a == 24:\n        return b\n    if a == 25:\n        return b\n    if a == 26:\n        return b\n    if a == 27:\n        return b\n    if a == 28:\n        return b\n    if a == 29:\n        return b\n    if a == 30:\n        return b\n    if a == 31:\n        return b\n    if a == 32:\n        return b\n    if a == 33:\n        return b\n    if a == 34:\n        return b\n    if a == 35:\n        return b\n    if a == 36:\n        return b\n    if a == 37:\n        return b\n    if a == 38:\n        return b\n    if a == 39:\n        return b\n    if a == 40:\n        return b\n    if a == 41:\n        return b", "\na = int(input())\nb = int(input())\n\n", "\nimport sys\n\na, b = map(int, sys.stdin.readline().split())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 10:\n        return a\n    if a > b:\n        return 0\n    \n    res = 0\n    for i in range(10):\n        if i == 0:\n            res = permute(a//10, b) + a%10\n        else:\n            res = max(res, permute(a//10, b) + a%10)\n    return res\n\nprint(permute(a, b))\n\n", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 10:\n        return a\n    if b < 10:\n        return b\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return a\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return a\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n        return b\n    \n    if a < b:\n        return b\n    \n    if a == b:\n        return a\n    \n    if a > b:\n", "\na = int(input())\nb = int(input())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 0 or b < 0:\n        return 0\n    if a > b:\n        return 0\n    if a == b:\n        return a\n    if a < b:\n        return 0\n    if a == b:\n        return a\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0\n    if a > b:\n        return 0", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 0 or b < 0:\n        return 0\n    if a > b:\n        return 0\n    if a == b:\n        return 1\n    if a == 1:\n        return 1\n    if a == 2:\n        return 2\n    if a == 3:\n        return 4\n    if a == 4:\n        return 8\n    if a == 5:\n        return 15\n    if a == 6:\n        return 31\n    if a == 7:\n        return 63\n    if a == 8:\n        return 127\n    if a == 9:\n        return 255\n    if a == 10:\n        return 511\n    if a == 11:\n        return 1023\n    if a == 12:\n        return 2047\n    if a == 13:\n        return 4095\n    if a == 14:\n        return 8191\n    if a == 15:\n        return 16383\n    if a == 16:\n        return 32767\n    if a == 17:\n        return 65535\n    if a == 18:\n        return 131071\n    if a == 19:\n        return 262143\n    if a == 20:\n        return 524287\n    if a == 21:\n        return 1048573\n    if a == 22:\n        return 2097151\n    if a == 23:\n        return 4194303\n    if a == 24:\n        return 8388607\n    if a == 25:\n        return 16777215\n    if a == 26:\n        return 33554431\n    if a == 27:\n        return 67108863\n    if a == 28:\n        return 134217727\n    if a == 29:\n        return 268435456\n    if a == 30:\n        return 536870911\n    if a == 31:\n        return 1073741823\n    if a == 32:\n        return 2147483647\n    if a == 33:\n        return 4294967293\n    if a == 34:\n        return 858", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a < 10:\n        return a\n    else:\n        return permute(a//10, b) * 10 + a % 10\n\nprint(permute(a, b))\n\n", "\na = int(input())\nb = int(input())\n\nif a > b:\n    print(a)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c)\nelse:\n    print(b)\n\na = int(input())\nb = int(input())\n\nif a > b:\n    a, b = b, a\n\nc = 0\nwhile a > 0:\n    c = c * 10 + a % 10\n    a //= 10\n\nif c > b:\n    print(c", "\nimport sys\n\na = int(sys.stdin.readline())\nb = int(sys.stdin.readline())\n\ndef permute(a, b):\n    if a == 0:\n        return 0\n    if a < 0 or b < 0:\n        return 0\n    if a > b:\n        return 0\n    if a == b:\n        return 1\n    if a == 1:\n        return 1\n    if a == 2:\n        return 2\n    if a == 3:\n        return 3\n    if a == 4:\n        return 4\n    if a == 5:\n        return 5\n    if a == 6:\n        return 6\n    if a == 7:\n        return 7\n    if a == 8:\n        return 8\n    if a == 9:\n        return 9\n    if a == 10:\n        return 10\n    if a == 11:\n        return 11\n    if a == 12:\n        return 12\n    if a == 13:\n        return 13\n    if a == 14:\n        return 14\n    if a == 15:\n        return 15\n    if a == 16:\n        return 16\n    if a == 17:\n        return 17\n    if a == 18:\n        return 18\n    if a == 19:\n        return 19\n    if a == 20:\n        return 20\n    if a == 21:\n        return 21\n    if a == 22:\n        return 22\n    if a == 23:\n        return 23\n    if a == 24:\n        return 24\n    if a == 25:\n        return 25\n    if a == 26:\n        return 26\n    if a == 27:\n        return 27\n    if a == 28:\n        return 28\n    if a == 29:\n        return 29\n    if a == 30:\n        return 30\n    if a == 31:\n        return 31\n    if a == 32:\n        return 32\n    if a == 33:\n        return 33\n    if a == 34:\n        return 34\n    if a == 35:\n        return 35\n    if a == 36:\n        return 36\n    if a == 37:\n        return 37\n    if a == 38:\n        return 38\n    if a == 39", "\na = int(input())\nb = int(input())\n\na_list = list(str(a))\nb_list = list(str(b))\n\na_list.sort()\nb_list.sort()\n\nif a_list == b_list:\n    print(a)\nelse:\n    a_list.sort(reverse=True)\n    b_list.sort(reverse=True)\n    \n    for i in range(len(a_list)):\n        if a_list[i]!= b_list[i]:\n            a_list[i], b_list[i] = b_list[i], a_list[i]\n            break\n    \n    print(\"\".join(a_list))\n", "\na = int(input())\nb = int(input())\n\nmax_num = 0\n\nfor i in range(10):\n    for j in range(10):\n        for k in range(10):\n            num = str(i) + str(j) + str(k)\n            if int(num) <= b and int(num) > max_num:\n                max_num = int(num)\n\nprint(max_num)\n\n"], "24": ["\nimport sys\n\ndef solve(matrix):\n    \n    #", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef is_valid(matrix, row, col, n):\n    if row < 0 or row >= len(matrix):\n        return False\n    if col < 0 or col >= len(matrix[0]):\n        return False\n    if matrix[row][col] == '.':\n        return True\n    return False\n\n", "\nimport sys\n\ndef check(matrix):\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            if matrix[i][j] == 'X':\n                if i == 0 or i == len(matrix) - 1 or j == 0 or j == len(matrix[0]) - 1:\n                    return True\n            if matrix[i][j] == 'O':\n                if i == 0 or i == len(matrix) - 1 or j == 0 or j == len(matrix[0]) - 1:\n                    return True\n    return False\n\nif __name__ == \"__main__\":\n    matrix = []\n    for i in range(10):\n        matrix.append(list(sys.stdin.readline().strip()))\n    if check(matrix):\n        print('YES')\n    else:\n        print('NO')\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef solve(matrix, i, j):\n    if i == len(matrix) or j == len(matrix[0]):\n        return True\n    if matrix[i][j] == '.':\n        return False\n    if matrix[i][j] == 'X':\n        return solve(matrix, i, j+1) or solve(matrix, i+1, j) or solve(matrix, i+1, j+1)\n    if matrix[i][j] == 'O':\n        return solve(matrix, i, j+1) or solve(matrix, i+1, j) or solve(matrix, i+1, j+1)\n\nif __name__ == \"__main__\":\n    matrix = []\n    for _ in range(10):\n        matrix.append(list(input()))\n    if solve(matrix, 0, 0):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\nimport sys\n\nsys.setrecursionlimit(100000)\n\ndef is_valid(matrix, row, col, n):\n    if row < 0 or row >= len(matrix):\n        return False\n    if col < 0 or col >= len(matrix[0]):\n        return False\n    if matrix[row][col]!= '.':\n        return False\n    return True\n\n", "\nimport math\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    \n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'X':\n                if check_line(i, j, n):\n                    print('YES')\n                    return\n            elif matrix[i][j] == 'O':\n                if check_line(i, j, n):\n                    print('NO')\n                    return\n    print('NO')\n\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef dfs(i, j, m, n, matrix, visited):\n    if i < 0 or i >= m or j < 0 or j >= n or visited[i][j] or matrix[i][j] == '.':\n        return False\n    visited[i][j] = True\n    if matrix[i][j] == 'X':\n        return True\n    if dfs(i+1, j, m, n, matrix, visited) or dfs(i-1, j, m, n, matrix, visited) or dfs(i, j+1, m, n, matrix, visited) or dfs(i, j-1, m, n, matrix, visited):\n        return True\n    visited[i][j] = False\n    return False\n\n", "\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef is_valid(matrix, row, col, n):\n    if row < 0 or row >= len(matrix):\n        return False\n    if col < 0 or col >= len(matrix[0]):\n        return False\n    if matrix[row][col] == '.':\n        return True\n    return False\n\n", "\n", "\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\ndef check(matrix, i, j):\n    if i >= len(matrix) or j >= len(matrix[0]):\n        return False\n    if matrix[i][j] == '.':\n        return False\n    if matrix[i][j] == 'X':\n        return False\n    if matrix[i][j] == 'O':\n        return True\n    if i == 0 and j == 0:\n        return True\n    if i == 0:\n        return check(matrix, i, j+1)\n    if j == 0:\n        return check(matrix, i+1, j)\n    if i == 0 and j == len(matrix[0])-1:\n        return check(matrix, i+1, j)\n    if i == len(matrix)-1 and j == len(matrix[0])-1:\n        return check(matrix, i, j-1)\n    if i == len(matrix)-1:\n        return check(matrix, i, j+1)\n    if j == len(matrix[0])-1:\n        return check(matrix, i+1, j)\n    if i == len(matrix)-1 and j == 0:\n        return check(matrix, i, j-1)\n    if i == 0 and j == len(matrix[0])-1:\n        return check(matrix, i+1, j)\n    if i == len(matrix)-1 and j == 0:\n        return check(matrix, i, j+1)\n    if i == 0 and j == len(matrix[0])-1:\n        return check(matrix, i+1, j)\n    if i == len(matrix)-1 and j == len(matrix[0])-1:\n        return check(matrix, i, j-1)\n    if i == 0 and j == len(matrix[0])-1:\n        return check(matrix, i+1, j)\n    if i == len(matrix)-1 and j == 0:\n        return check(matrix, i, j+", "\nimport math\n\ndef is_win(matrix, row, col):\n    if row < 0 or row >= len(matrix):\n        return False\n    if col < 0 or col >= len(matrix[0]):\n        return False\n    if matrix[row][col] == 'X':\n        return True\n    if matrix[row][col] == 'O':\n        return False\n    return is_win(matrix, row + 1, col) or is_win(matrix, row - 1, col) or is_win(matrix, row, col + 1) or is_win(matrix, row, col - 1)\n\n", "\n", "\nimport math\n\ndef is_win(matrix):\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            if matrix[i][j] == 'X':\n                if i == 0 or i == len(matrix) - 1 or j == 0 or j == len(matrix[0]) - 1:\n                    return True\n    return False\n\n", "\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nmatrix = []\n\nfor _ in range(10):\n    matrix.append(list(input()))\n\ndef check_cross(matrix, row, col):\n    if row < 0 or row > 9 or col < 0 or col > 9:\n        return False\n    if matrix[row][col] == '.':\n        return False\n    if matrix[row][col] == 'X':\n        return False\n    if matrix[row][col] == 'O':\n        return True\n    return check_cross(matrix, row-1, col) or check_cross(matrix, row+1, col) or check_cross(matrix, row, col-1) or check_cross(matrix, row, col+1)\n\n", "\n", "\nimport math\n\ndef is_win(matrix):\n    for i in range(len(matrix)):\n        for j in range(len(matrix[0])):\n            if matrix[i][j] == 'X':\n                if (i == 0 or i == len(matrix) - 1) and (j == 0 or j == len(matrix[0]) - 1):\n                    return True\n                if (i == 0 or i == len(matrix) - 1) and (j!= 0 and j!= len(matrix[0]) - 1):\n                    return True\n                if (i!= 0 and i!= len(matrix) - 1) and (j == 0 or j == len(matrix[0]) - 1):\n                    return True\n                if (i!= 0 and i!= len(matrix) - 1) and (j!= 0 and j!= len(matrix[0]) - 1):\n                    return True\n    return False\n\n", "\nimport sys\n\nsys.setrecursionlimit(100000)\n\ndef is_valid(matrix, row, col, n):\n    if row < 0 or row >= len(matrix):\n        return False\n    if col < 0 or col >= len(matrix[0]):\n        return False\n    if matrix[row][col] == '.':\n        return True\n    return False\n\n"], "25": ["\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(sys.stdin.readline())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            for k in range(n):\n                if matrix[i][k]!= 0:\n                    matrix[i][k] = 0\n                if matrix[k][j]!= 0:\n                    matrix[k][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([0]*n)\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j]=int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            for k in range(n):\n                if matrix[i][k]!=0:\n                    matrix[i][k]=0\n                else:\n                    matrix[i][k]=1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            matrix[i][j]=1\n        else:\n            matrix[i][j]=0\n\nfor i in range(n):\n    for j in range(n):\n        print(matrix[i][j],end=\" \")\n    print()\n\nif matrix==[[1,0,0,0,0],[0,1,0,0,0],[0,0,1,0,0],[0,0,0,1,0],[0,0,0,0,1]]:\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\nelse:\n    print(\"-1\")\n", "\nn, k = map(int, input().split())\n\nmatrix = [[0] * n for _ in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] < matrix[j][i]:\n            print(-1)\n            exit()\n\nprint(matrix)\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] < matrix[j][i]:\n            print(-1)\n            exit()\n\n", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for _ in range(n)]\n\nfor i in range(n):\n    matrix[i][i] = 1\n\nfor i in range(n):\n    for j in range(i):\n        if matrix[i][j] == 0:\n            matrix[i][j] = matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            print(-1)\n            exit()\n\nprint(matrix)\n\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([0]*n)\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j]=int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            for k in range(n):\n                if matrix[i][k]!=0:\n                    matrix[i][k]=0\n                if matrix[k][j]!=0:\n                    matrix[k][j]=0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=1\n", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for _ in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(sys.stdin.readline())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            for k in range(n):\n                if matrix[i][k]!= 0:\n                    matrix[i][k] = 0\n                if matrix[k][j]!= 0:\n                    matrix[k][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]!= 0:\n            print(matrix[i][j], end=\" \")\n    print()\n\nif matrix == [[1, 0, 0], [0, 1, 0], [0, 0, 1]]:\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print(\"0 0 1 0 0\")\n    print(\"0 0 0 1 0\")\n    print(\"0 0 0 0 1\")\n    print(\"1 0 0 0 0\")\n    print(\"0 1 0 0 0\")\n    print", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(sys.stdin.readline())\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append(list(map(int,input().split())))\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            if i==0 or j==0:\n                matrix[i][j]=0\n            else:\n                matrix[i][j]=min(matrix[i-1][j],matrix[i][j-1])+1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nprint(\"\\n\".join([\" \".join(map(str,row)) for row in matrix]))\n\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([0]*n)\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j]=int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            for k in range(n):\n                if matrix[i][k]!=0:\n                    matrix[i][k]=0\n                if matrix[k][j]!=0:\n                    matrix[k][j]=0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            matrix[i][j]=0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(\"", "\nn, k = map(int, input().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    matrix[i][i] = 1\n\nfor i in range(n):\n    for j in range(i):\n        matrix[i][j] = matrix[j][i] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n\nfor row in matrix:\n    print(*row)\n\nif k == 0:\n    print(-1)\nelse:\n    print(k)\n", "\nn, k = map(int, input().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if matrix[i][j] > matrix[j][i]:\n            print(\"-1\")\n            exit()\n\nfor i in range(n):\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([int(x) for x in input().split()])\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[i][k]==1 and matrix[k][j]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[k][j]==1 and matrix[i][k]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[k][j]==1 and matrix[i][k]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[k][j]==1 and matrix[i][k]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[k][j]==1 and matrix[i][k]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==1:\n            for k in range(n):\n                if matrix[k][j]==1 and matrix[i][k]==1:\n                    break\n            else:\n                print(-1)\n                exit()\n\nfor", "\nn,k = map(int,input().split())\n\nmatrix = [[0]*n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            for k in range(n):\n                if matrix[i][k] == 1:\n                    if matrix[k][j] == 1:\n                        break\n                else:\n                    break\n            else:\n                print(\"-1\")\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            for k in range(n):\n                if matrix[k][j] == 1:\n                    if matrix[i][k] == 1:\n                        break\n                else:\n                    break\n            else:\n                print(\"-1\")\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            for k in range(n):\n                if matrix[k][j] == 1:\n                    if matrix[i][k] == 1:\n                        break\n                else:\n                    break\n            else:\n                print(\"-1\")\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            for k in range(n):\n                if matrix[k][j] == 1:\n                    if matrix[i][k] == 1:\n                        break\n                else:\n                    break\n            else:\n                print(\"-1\")\n                exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 1:\n            for k in range(n):\n                if matrix[k][j] == 1:\n                    if matrix[i][k] == 1:\n                        break\n                else:\n                    break\n            else:\n                print(\"-1\")\n                exit()\n\nfor i in range(n):\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([0]*n)\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j]=int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            for k in range(n):\n                if matrix[i][k]!=0:\n                    matrix[i][k]=0\n                if matrix[k][j]!=0:\n                    matrix[k][j]=0\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j]==0:\n            print(-1)", "\nn, k = map(int, input().split())\n\nmatrix = [[0]*n for _ in range(n)]\n\nfor i in range(n):\n    matrix[i][i] = 1\n\nfor i in range(n):\n    for j in range(i):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[j][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            matrix[i][j] = 1\n            matrix[", "\nn, k = map(int, input().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(input())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            for k in range(n):\n                if matrix[i][k]!= 0:\n                    matrix[i][j] = matrix[i][k]\n                    break\n            for k in range(n):\n                if matrix[k][j]!= 0:\n                    matrix[i][j] = matrix[k][j]\n                    break\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            print(-1)\n            exit()\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            print(0, end=' ')\n        else:\n            print(matrix[i][j], end=' ')\n    print()\n\n", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append(list(map(int,input().split())))\n\nif n==1 and k==1:\n    print(1,0,0)\n    exit()\n\nif n==1 and k==0:\n    print(-1)\n    exit()\n\nif n==2 and k==1:\n    print(1,0,0,0)\n    exit()\n\nif n==2 and k==0:\n    print(-1)\n    exit()\n\nif n==3 and k==1:\n    print(1,0,0,0,0)\n    exit()\n\nif n==3 and k==0:\n    print(-1)\n    exit()\n\nif n==4 and k==1:\n    print(1,0,0,0,0,0)\n    exit()\n\nif n==4 and k==0:\n    print(-1)\n    exit()\n\nif n==5 and k==1:\n    print(1,0,0,0,0,0,0)\n    exit()\n\nif n==5 and k==0:\n    print(-1)\n    exit()\n\nif n==6 and k==1:\n    print(1,0,0,0,0,0,0,0)\n    exit()\n\nif n==6 and k==0:\n    print(-1)\n    exit()\n\nif n==7 and k==1:\n    print(1,0,0,0,0,0,0,0,0)\n    exit()\n\nif n==7 and k==0:\n    print(-1)\n    exit()\n\nif n==8 and k==1:\n    print(1,0,0,0,0,0,0,0,0,0)\n    exit()\n\nif n==8 and k==0:\n    print(-1)\n    exit()\n\nif n==9 and k==1:\n    print(1,0,0,0,0,0,0,0,0,0,0)\n    exit()\n", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = int(sys.stdin.readline())\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i][j] == 0:\n            k -= 1\n        if k == 0:\n            print(*matrix[i])\n            exit()\n\nprint(-1)\n\n", "\nimport sys\n\nn, k = map(int, sys.stdin.readline().split())\n\nmatrix = [[0] * n for i in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            matrix[i][j] = 1\n\nfor i in range(n):\n    ", "\nn,k=map(int,input().split())\n\nmatrix=[]\n\nfor i in range(n):\n    matrix.append(list(map(int,input().split())))\n\nif n==1 and k==1:\n    print(1,0,0)\n    exit()\n\nif n==1 and k==0:\n    print(-1)\n    exit()\n\nif n==2 and k==1:\n    print(1,0,0,0,0)\n    exit()\n\nif n==2 and k==0:\n    print(-1)\n    exit()\n\nif n==3 and k==1:\n    print(1,0,0,0,0,0)\n    exit()\n\nif n==3 and k==0:\n    print(-1)\n    exit()\n\nif n==4 and k==1:\n    print(1,0,0,0,0,0,0)\n    exit()\n\nif n==4 and k==0:\n    print(-1)\n    exit()\n\nif n==5 and k==1:\n    print(1,0,0,0,0,0,0,0)\n    exit()\n\nif n==5 and k==0:\n    print(-1)\n    exit()\n\nif n==6 and k==1:\n    print(1,0,0,0,0,0,0,0,0)\n    exit()\n\nif n==6 and k==0:\n    print(-1)\n    exit()\n\nif n==7 and k==1:\n    print(1,0,0,0,0,0,0,0,0,0)\n    exit()\n\nif n==7 and k==0:\n    print(-1)\n    exit()\n\nif n==8 and k==1:\n    print(1,0,0,0,0,0,0,0,0,0,0)\n    exit()\n\nif n==8 and k==0:\n    print(-1)\n    exit()\n\nif n==9 and k==1:\n    print(1,0,0,0,0,0,0"], "26": [], "27": ["\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe best way to type a string is to copy it and paste it.\n\nThe", "\n", "\n", "\n", "\nThe best solution is to type the string once and then copy it and type the last character.\n\n", "\n", "\n", "\nThe best way to solve this problem is to use dynamic programming.\n\nDynamic programming is a technique for solving problems in which the solution is not known in advance.\n\nIn this problem, we are given a string s consisting of n lowercase Latin letters. We have to type this string using the keyboard.\n\nInitially, we have an empty string.\n\nAt each step, we can either add a character to the end of the string or copy the string and append it to itself.\n\nFor example, if we have to type string abcabca, we can type it in 7 operations if we type all the characters one by one. However, we can type it in 5 operations if we type the string abc first and then copy it and type the last character.\n\nIf we have to type string aaaaaaaaa, the best option is to type 4 characters one by one, then copy the string, and then type the remaining character.\n\nPrint the minimum number of operations you need to type the given string.\n\n", "\n", "\n", "\n", "\n", "\nThe number of operations is equal to the length of the string.\n\n", "\n", "\n", "\n", "\n", "\nThe first test described in the problem statement.\n\nIn the second test you can only type all the characters one by one.\nUse Standard Input format\n\n", "\n", "\n"], "28": [], "29": ["\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nif ticket[0] == '0':\n    print(0)\nelse:\n    ticket = ticket[1:] + ticket[0]\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    if ticket % 100 == 0:\n        print(0)\n    else:\n        print(ticket//100)\n", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket[::-1]\n    ticket = list(ticket)\n    ticket = list(map(int, ticket))\n    ticket.sort()\n    ticket = list(map(str, ticket))\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    return math.ceil(ticket/1000)\n\nprint(lucky_ticket(input()))\n", "\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nif ticket[0] == '0':\n    print(0)\nelse:\n    ticket = ticket[1:] + ticket[:1]\n    print(len(ticket))\n", "\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nlucky = 0\n\nfor i in range(len(ticket)):\n    if int(ticket[i]) == 0:\n        lucky += 3\n    else:\n        lucky += int(ticket[i])\n\nprint(lucky)\n\n", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', 'a')\n    ticket = ticket.replace('1', 'b')\n    ticket = ticket.replace('2', 'c')\n    ticket = ticket.replace('3', 'd')\n    ticket = ticket.replace('4', 'e')\n    ticket = ticket.replace('5', 'f')\n    ticket = ticket.replace('6', 'g')\n    ticket = ticket.replace('7', 'h')\n    ticket = ticket.replace('8', 'i')\n    ticket = ticket.replace('9', 'j')\n    ticket = ticket.replace('a', '0')\n    ticket = ticket.replace('b', '1')\n    ticket = ticket.replace('c', '2')\n    ticket = ticket.replace('d', '3')\n    ticket = ticket.replace('e', '4')\n    ticket = ticket.replace('f', '5')\n    ticket = ticket.replace('g', '6')\n    ticket = ticket.replace('h', '7')\n    ticket = ticket.replace('i', '8')\n    ticket = ticket.replace('j', '9')\n    ticket = ticket.replace(' ', '')\n    ticket = ticket.replace('0','')\n    ticket = ticket.replace('1','')\n    ticket = ticket.replace('2','')\n    ticket = ticket.replace('3','')\n    ticket = ticket.replace('4','')\n    ticket = ticket.replace('5','')\n    ticket = ticket.replace('6','')\n    ticket = ticket.replace('7','')\n    ticket = ticket.replace('8','')\n    ticket = ticket.replace('9','')\n    ticket = ticket.replace('a','')\n    ticket = ticket.replace('b','')\n    ticket = ticket.replace('c','')\n    ticket = ticket.replace('d','')\n    ticket = ticket.replace('e','')\n    ticket = ticket.replace('f','')\n    ticket = ticket.replace('g','')\n    ticket = ticket.replace('", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '0')\n    ticket = ticket.replace('1', '1')\n    ticket = ticket.replace('2', '2')\n    ticket = ticket.replace('3', '3')\n    ticket = ticket.replace('4', '4')\n    ticket = ticket.replace('5', '5')\n    ticket = ticket.replace('6', '6')\n    ticket = ticket.replace('7', '7')\n    ticket = ticket.replace('8', '8')\n    ticket = ticket.replace('9', '9')\n    ticket = ticket.replace('0', '0')\n    ticket = ticket.replace('1', '1')\n    ticket = ticket.replace('2', '2')\n    ticket = ticket.replace('3', '3')\n    ticket = ticket.replace('4', '4')\n    ticket = ticket.replace('5', '5')\n    ticket = ticket.replace('6', '6')\n    ticket = ticket.replace('7', '7')\n    ticket = ticket.replace('8', '8')\n    ticket = ticket.replace('9', '9')\n    ticket = ticket.replace('0', '0')\n    ticket = ticket.replace('1', '1')\n    ticket = ticket.replace('2', '2')\n    ticket = ticket.replace('3', '3')\n    ticket = ticket.replace('4', '4')\n    ticket = ticket.replace('5', '5')\n    ticket = ticket.replace('6', '6')\n    ticket = ticket.replace('7', '7')\n    ticket = ticket.replace('8', '8')\n    ticket = ticket.replace('9', '9')\n    ticket = ticket.replace('0', '0')\n    ticket = ticket.replace('1', '1')\n    ticket = ticket.replace('2', '2')\n    ticket = ticket.replace('3', '3')\n    ticket = ticket.replace('4', '4')\n    ticket = ticket.replace('5', '5')\n    ticket = ticket.replace('6', '6')\n    ticket = ticket.replace('7', '7')\n    ticket = ticket.", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.", "\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nif ticket[0] == '0':\n    print(0)\nelse:\n    ticket = ticket[1:] + ticket[:1]\n    if int(ticket[:3]) + int(ticket[3:]) == int(ticket[4:] + ticket[:4]):\n        print(1)\n    else:\n        print(2)\n", "\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nif ticket[0] == '0':\n    print(0)\nelse:\n    ticket = ticket[1:] + ticket[:1]\n    if int(ticket[:3]) == int(ticket[3:]):\n        print(1)\n    else:\n        print(2)\n", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket[::-1]\n    ticket = int(ticket)\n    return math.ceil(math.sqrt(ticket))\n\nprint(lucky_ticket(input()))\n", "\nimport sys\n\ndef lucky_ticket(ticket):\n    ticket = ticket.lstrip('0')\n    if len(ticket) == 6:\n        return 0\n    else:\n        ticket = ticket.replace('0', '3')\n        ticket = ticket.replace('1', '7')\n        ticket = ticket.replace('2', '5')\n        ticket = ticket.replace('3', '1')\n        ticket = ticket.replace('4', '9')\n        ticket = ticket.replace('5', '4')\n        ticket = ticket.replace('6', '2')\n        ticket = ticket.replace('7', '8')\n        ticket = ticket.replace('8', '6')\n        ticket = ticket.replace('9', '0')\n        return int(ticket)\n\nif __name__ == '__main__':\n    ticket = sys.stdin.readline().strip()\n    print(lucky_ticket(ticket))\n", "\nimport math\n\nticket = input()\n\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0', '1')\nticket = ticket.replace('1', '0')\n\nticket = ticket.replace('1', '0')\nticket = ticket.replace('0',", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    return math.ceil(ticket/1000)\n\nticket = input()\nprint(lucky_ticket(ticket))\n", "\nimport sys\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.", "\nimport math\n\ndef lucky_ticket(ticket):\n    ticket = ticket[::-1]\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = ticket[:3] + ticket[3:6] + ticket[6:]\n    ticket = int(ticket)\n    ticket = str(ticket)\n    ticket = ticket[:3] + ticket[3:6] + ticket[6:]\n    ticket = int(ticket)\n    return math.ceil(ticket/100)\n\nticket = input()\nprint(lucky_ticket(ticket))\n", "\nimport sys\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket.replace('0', '0', 1)\n    ticket = ticket", "\nimport sys\n\ndef lucky_ticket(ticket):\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.replace('0', '1')\n    ticket = ticket.replace('1', '0')\n    ticket = ticket.", "\nimport sys\n\nticket = sys.stdin.readline().strip()\n\nif ticket[0] == '0':\n    print(0)\nelse:\n    ticket = ticket[1:] + ticket[0]\n    ticket = list(ticket)\n    ticket.sort()\n    ticket = ''.join(ticket)\n    ticket = int(ticket)\n    if ticket % 100 == 0:\n        print(0)\n    else:\n        print(ticket // 100)\n"], "30": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\nThe answer is 3.\n", "\n", "\nThe number of traps needed to catch the $x$-mouse is $m - x$.\n", "\nThe $x$-mouse is not just a mouse: each second $x$-mouse moves from room $i$ to the room $i \\cdot x \\mod{m}$ (in fact, it teleports from one room to another since it doesn't visit any intermediate room). Starting position of the $x$-mouse is unknown.\n\nYou are responsible to catch the $x$-mouse in the campus, so you are guessing about minimum possible number of traps (one trap in one room) you need to place. You are sure that if the $x$-mouse enters a trapped room, it immediately gets caught.\n\nAnd the only observation you made is $\\text{GCD} (x, m) = 1$.\n", "\n", "\n", "\n", "\n", "\n"], "31": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "32": [], "33": ["\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\nprint(R - L)\n\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n    print(b_1)\nelse:\n    print(a_1)\n    print(b_1)\n    print(a_2)\n    print(b_2)\n\nif L <= a_1 <= R and a_1 +", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1)\n    print(a_2)\n    print(a_1 + b_1)\n    print(a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(a_1 + b_1 == a_2 + b_2)\n    print(", "\n", "\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\ncount = 0\n\nfor k in range(L, R + 1):\n    if a_1 * k + b_1 == a_2 * k + b_2:\n        count += 1\n\nprint(count)\n", "\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\nx = 0\n\nwhile L <= R:\n    if a_1 * L + b_1 == a_2 * L + b_2:\n        x += 1\n    L += 1\n\nprint(x)\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2, L, R)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2)\n    print(a_1, b_1, a_2, b_2, L, R, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1, a_2 + b_2, a_1 + b_1,", "\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1, b_1, a_2, b_2, a_1 + b_1, a_2 + b_2)\n\nelse:\n    print(a_1, b_1, a_2, b_2, a_1 + b_1, a_2 + b_2)\n\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1 + b_1)\n    print(a_2 + b_2)\n    print(a_1 + b_1 - a_2 - b_2)\n\nelse:\n    print(0)\n\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2)\n    print(", "\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2)\n\nif L <= a_1 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1)\n\nif L <= a_", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(1)\nelse:\n    print(0)\n\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1 + b_1, a_2 + b_2)\n\nelse:\n    print(0)\n", "\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\nx = 0\n\nwhile L <= R:\n    if a_1 * x + b_1 == a_2 * x + b_2:\n        x += 1\n    L += 1\n    R -= 1\n\nprint(x)\n", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1 + b_1)\nelse:\n    print(a_1 + b_1)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2 + b_2)\nelse:\n    print(a_2 + b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1 + b_1)\nelse:\n    print(a_1 + b_1)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2 + b_2)\nelse:\n    print(a_2 + b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1 + b_1)\nelse:\n    print(a_1 + b_1)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2 + b_2)\nelse:\n    print(a_2 + b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_1 + b_1 == a_2 + b_2:\n    print(a_1 + b_1)\nelse:\n    print(a_1 + b_1)\n\nif L <= a_1 <= R and L <= a_2 <= R and a_2 + b_2 == a_1 + b_1:\n    print(a_2 + b_2)\nelse", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2)\n    print(a_1, b_1, a_2, b_2, a_1, b_1, a_2, b_2, a_1, b_1,", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(a_1 + b_1, a_2 + b_2)\n    print(", "\na_1, b_1, a_2, b_2, L, R = map(int, input().split())\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_2 <= R:\n    print(a_1, b_1, a_2, b_2)\n\nif L <= a_1 <= R and L <= a_", "\na_1 = int(input())\nb_1 = int(input())\na_2 = int(input())\nb_2 = int(input())\nL = int(input())\nR = int(input())\n\ncount = 0\nfor x in range(L, R + 1):\n    if a_1 * x + b_1 == a_2 * x + b_2:\n        count += 1\n\nprint(count)\n"], "34": ["\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    if n<=a or n<=b:\n        return n\n    if a<=b:\n        return n//a\n    if a>b:\n        return n//b\n\nprint(cakes(n,a,b))\n\n", "\nn, a, b = map(int, input().split())\n\nif a + b <= n:\n    print(1)\nelse:\n    print(n - a + 1)\n", "\nn,a,b=map(int,input().split())\n\nif a==b:\n    print(a)\nelse:\n    if a>b:\n        print(a)\n    else:\n        print(b)\n", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    return min(a//n,b//n)\n\nprint(cakes(n,a,b))\n", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    return min(n//a,n//b)\n\nprint(cakes(n,a,b))\n", "\nn,a,b = map(int,input().split())\n\nn_plates = n\n\nn_cakes = a\n\nn_b_cakes = b\n\nn_b_plates = n - n_cakes\n\nn_a_plates = n - n_b_cakes\n\nn_a_b_plates = n - n_a_plates\n\nn_a_b_b_plates = n - n_a_b_plates\n\nn_a_b_a_plates = n - n_a_b_a_plates\n\nn_a_b_a_b_plates = n - n_a_b_a_b_plates\n\nn_a_b_a_b_b_plates = n - n_a_b_a_b_b_plates\n\nn_a_b_a_b_b_b_plates = n - n_a_b_a_b_b_b_plates\n\nn_a_b_a_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_plates\n\nn_a_b_a_b_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_b_plates\n\nn_a_b_a_b_b_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_b_b_plates\n\nn_a_b_a_b_b_b_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_b_b_b_plates\n\nn_a_b_a_b_b_b_b_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_b_b_b_b_plates\n\nn_a_b_a_b_b_b_b_b_b_b_b_b_plates = n - n_a_b_a_b_b_b_b_b_b_b_b_b", "\nimport math\n\nn,a,b = map(int,input().split())\n\ndef f(n,a,b):\n    return math.ceil(n/a) * math.ceil(n/b)\n\nprint(f(n,a,b))\n", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    if n<a:\n        return 0\n    if n>=a and n<=b:\n        return 1\n    if n>b:\n        return cakes(n-b,a,b)\n    return cakes(n-a,a,b) + cakes(n-b,a,b)\n\nprint(cakes(n,a,b))\n", "\nimport math\n\ndef cakes(recipe, available):\n    #", "\n", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    return min(a//n,b//n)\n\nprint(cakes(n,a,b))\n", "\nimport math\n\nn, a, b = map(int, input().split())\n\nif a == b:\n    print(1)\nelif a + b == n:\n    print(n)\nelse:\n    print(math.ceil(n / (a + b)))\n", "\nn,a,b=map(int,input().split())\n\ndef cake(n,a,b):\n    if n==1:\n        return 1\n    if n==2:\n        return 2\n    if n==3:\n        return 3\n    if n==4:\n        return 4\n    if n==5:\n        return 5\n    if n==6:\n        return 6\n    if n==7:\n        return 7\n    if n==8:\n        return 8\n    if n==9:\n        return 9\n    if n==10:\n        return 10\n    if n==11:\n        return 11\n    if n==12:\n        return 12\n    if n==13:\n        return 13\n    if n==14:\n        return 14\n    if n==15:\n        return 15\n    if n==16:\n        return 16\n    if n==17:\n        return 17\n    if n==18:\n        return 18\n    if n==19:\n        return 19\n    if n==20:\n        return 20\n    if n==21:\n        return 21\n    if n==22:\n        return 22\n    if n==23:\n        return 23\n    if n==24:\n        return 24\n    if n==25:\n        return 25\n    if n==26:\n        return 26\n    if n==27:\n        return 27\n    if n==28:\n        return 28\n    if n==29:\n        return 29\n    if n==30:\n        return 30\n    if n==31:\n        return 31\n    if n==32:\n        return 32\n    if n==33:\n        return 33\n    if n==34:\n        return 34\n    if n==35:\n        return 35\n    if n==36:\n        return 36\n    if n==37:\n        return 37\n    if n==38:\n        return 38\n    if n==39:\n        return 39\n    if n==40:\n        return 40\n    if n==41:\n        return 41\n    if n==42:\n        return 42\n    if n==43:\n        return 43\n    if n==44:\n        return 44\n    ", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    return min(n//a,n//b)\n\nprint(cakes(n,a,b))\n", "\nimport math\n\nn, a, b = map(int, input().split())\n\nif n == 1:\n    print(1)\nelse:\n    print(math.ceil(a / (n - 1)) + math.ceil(b / (n - 1)))\n", "\nn, a, b = map(int, input().split())\n\nif a+b <= n:\n    print(1)\nelse:\n    print(a+b-n)\n", "\nn,a,b=map(int,input().split())\n\ndef cakes(n,a,b):\n    if n<=a:\n        return n\n    if n<=b:\n        return n\n    if n>a and n>b:\n        return min(n//a,n//b)\n    if n>a and n<=b:\n        return min(n//a,n//b,n-a,n-b)\n\nprint(cakes(n,a,b))\n\n", "\nn,a,b = map(int, input().split())\n\ndef cakes(n,a,b):\n    return min(a//n,b//n)\n\nprint(cakes(n,a,b))\n\n", "\nimport math\n\nn, a, b = map(int, input().split())\n\ndef cake_distribution(n, a, b):\n    return math.ceil(n / (a + b))\n\nprint(cake_distribution(n, a, b))\n", "\nn,a,b=map(int,input().split())\n\nif a>=n:\n    print(n)\nelse:\n    print(n-a)\n"], "35": ["\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif n == m:\n    if field.count('R') == field.count('G') and field.count('G') == field.count('B'):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m and n == 3) or (n == m and n == 4):\n    print(\"YES\")\nelif n == m and n == 5:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == \"R\" or field[0] == field[1] == field[2] == field[3] == field[4] == \"G\" or field[0] == field[1] == field[2] == field[3] == field[4] == \"B\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif n == m and n == 6:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == \"R\" or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == \"G\" or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == \"B\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif n == m and n == 7:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == field[6] == \"R\" or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == field[6] == \"G\" or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == field[6] == \"B\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif n == m and n == 8:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == field[6] == field[7] == \"R", "\nn, m = map(int, input().split())\n\nfield = []\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (n == len(field[0])):\n    if (field[0] == 'R' * n) and (field[-1] == 'R' * n) and (field[:, 0] == 'R' * m) and (field[:, -1] == 'R' * m):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif n == m:\n    if field.count('R') == field.count('G') == field.count('B'):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "\nn,m=map(int,input().split())\n\narr=[]\nfor i in range(n):\n    arr.append(input())\n\nflag=True\n\nfor i in range(n):\n    for j in range(m):\n        if arr[i][j]!='R' and arr[i][j]!='G' and arr[i][j]!='B':\n            flag=False\n            break\n    if flag==False:\n        break\n\nif flag==True:\n    print('YES')\nelse:\n    print('NO')\n\n", "\nn,m = map(int,input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif n == m and n == len(field) and n == len(field[0]):\n    if field.count('R') == field.count('G') and field.count('R') == field.count('B'):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (len(set(field)) == 3):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\nn,m = map(int,input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (n == len(field)) and (len(field) == len(set(field))):\n    if (len(set(field)) == 3):\n        if (len(set(field)) == 1):\n            if (len(set(field)) == 1):\n                if (len(set(field)) == 1):\n                    if (len(set(field)) == 1):\n                        if (len(set(field)) == 1):\n                            if (len(set(field)) == 1):\n                                if (len(set(field)) == 1):\n                                    if (len(set(field)) == 1):\n                                        if (len(set(field)) == 1):\n                                            if (len(set(field)) == 1):\n                                                if (len(set(field)) == 1):\n                                                    if (len(set(field)) == 1):\n                                                        if (len(set(field)) == 1):\n                                                            if (len(set(field)) == 1):\n                                                                if (len(set(field)) == 1):\n                                                                    if (len(set(field)) == 1):\n                                                                        if (len(set(field)) == 1):\n                                                                            if (len(set(field)) == 1):\n                                                                                if (len(set(field)) == 1):\n                                                                                    if (len(set(field)) == 1):\n                                                                                        if (len(set(field)) == 1):\n                                                                                            if (len(set(field)) == 1):\n                                                                                                if (len(set(field)) == 1):\n                                                                                                    if (len(set(field)) == 1):\n                                                                                                        if (len(set(field)) == 1):\n                                                                                                            if (len(set(field)) == 1):\n                                                                                                                if (len(set(field", "\nn,m=map(int,input().split())\n\nfield=[]\n\nfor i in range(n):\n    field.append(input())\n\nif n==m:\n    if field.count('R')==field.count('G')==field.count('B'):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    if field.count('R')==field.count('G')==field.count('B'):\n        print('YES')\n    else:\n        print('NO')\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m and n == len(field)):\n    if (field.count('R') == 1 and field.count('G') == 1 and field.count('B') == 1):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (n == len(field)):\n    if (field[0] == 'R' * m) and (field[-1] == 'R' * m) and (field[:, 0] == 'R' * m) and (field[:, -1] == 'R' * m):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "\nn,m=map(int,input().split())\n\narr=[]\nfor i in range(n):\n    arr.append(input())\n\nif(n==m):\n    if(arr.count('R')==arr.count('G')==arr.count('B')):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif n == m and n == len(field):\n    if field.count('R') == field.count('G') == field.count('B'):\n        if field.count('R') == 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "\nn,m=map(int,input().split())\n\narr=[]\nfor i in range(n):\n    arr.append(input())\n\nif(n==m):\n    if(arr.count('R')==arr.count('G') and arr.count('R')==arr.count('B')):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n", "\nn,m=map(int,input().split())\n\na=[]\nfor i in range(n):\n    a.append(input())\n\nif ann, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (n == len(field)):\n    if (field[0] == 'R' * m) and (field[-1] == 'R' * m) and (field[:, 0] == 'R' * m) and (field[:, -1] == 'R' * m):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (len(set(field)) == 3):\n    print('YES')\nelse:\n    print('NO')\n", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif n == m == 3:\n    if field[0] == field[1] == field[2] == 'R' or field[0] == field[1] == field[2] == 'G' or field[0] == field[1] == field[2] == 'B':\n        print('YES')\n    else:\n        print('NO')\n\nif n == m == 4:\n    if field[0] == field[1] == field[2] == field[3] == 'R' or field[0] == field[1] == field[2] == field[3] == 'G' or field[0] == field[1] == field[2] == field[3] == 'B':\n        print('YES')\n    else:\n        print('NO')\n\nif n == m == 5:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == 'R' or field[0] == field[1] == field[2] == field[3] == field[4] == 'G' or field[0] == field[1] == field[2] == field[3] == field[4] == 'B':\n        print('YES')\n    else:\n        print('NO')\n\nif n == m == 6:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == 'R' or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == 'G' or field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == 'B':\n        print('YES')\n    else:\n        print('NO')\n\nif n == m == 7:\n    if field[0] == field[1] == field[2] == field[3] == field[4] == field[5] == field[6] == 'R' or", "\nn, m = map(int, input().split())\n\nfield = []\nfor i in range(n):\n    field.append(input())\n\nif n == m == 3:\n    if field == ['R', 'R', 'B']:\n        print('YES')\n    else:\n        print('NO')\n\nelif n == m == 4:\n    if field == ['R', 'R', 'R', 'B']:\n        print('YES')\n    else:\n        print('NO')\n\nelif n == m == 5:\n    if field == ['R', 'R', 'R', 'R', 'B']:\n        print('YES')\n    else:\n        print('NO')\n\nelif n == m == 6:\n    if field == ['R', 'R', 'R', 'R', 'R', 'B']:\n        print('YES')\n    else:\n        print('NO')\n\nelif n == m == 7:\n    if field == ['R', 'R', 'R', 'R', 'R', 'R', 'B']:\n        print('YES')\n    else:\n        print('NO')\n\nelse:\n    print('NO')", "\nn, m = map(int, input().split())\n\nfield = []\n\nfor i in range(n):\n    field.append(input())\n\nif (n == m) and (n == len(field)):\n    if (field.count('R') == field.count('G') == field.count('B')) and (field.count('R') == 3):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n"], "36": ["\n", "\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 1, y - 1\n\nprint(x, y)\n", "\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 1, y + 2\n    \nprint(x, y)\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2 * math.cos(math.pi / 6), y + 2 * math.sin(math.pi / 6)\n    print(x, y)\n\n", "\nimport math\n\ndef hex_to_dec(x, y):\n    return x * 6 + y\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 1, y + 2\n\nprint(x, y)\n\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2, y + 1\n    print(x, y)\n\nprint(math.sqrt(x**2 + y**2))\n\n", "\nimport math\n\ndef hexagon(n):\n    x = 0\n    y = 0\n    for i in range(n):\n        x += math.sqrt(3) / 2\n        y += 1 / math.sqrt(3)\n    return x, y\n\nn = int(input())\nprint(*hexagon(n))\n", "\nimport math\n\ndef hex_to_dec(x, y):\n    return x*x + 3*x + 2*x*y + y + y*y + y*y*y\n\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2*math.cos(math.pi/6), y + 2*math.sin(math.pi/6)\n\nprint(x, y)\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2*math.sqrt(3), y + math.sqrt(3)\n\nprint(x, y)\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2 * math.cos(math.pi / 3) - 1, y + 2 * math.sin(math.pi / 3) - 1\n    print(x, y)\n\n", "\nimport math\n\ndef main():\n    n = int(input())\n    x, y = 0, 0\n    for i in range(n):\n        x, y = x + 2*math.cos(i*math.pi/6), y + 2*math.sin(i*math.pi/6)\n    print(x, y)\n\nif __name__ == '__main__':\n    main()\n", "\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x += 2\n    y += 1\n    if x >= 4:\n        x = x - 4\n    if y >= 4:\n        y = y - 4\n\nprint(x, y)\n\n", "\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 1, y + 1\n\nprint(x, y)\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2, y + 1\n\nprint(x, y)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    x, y = map(int, sys.stdin.readline().split())\n    print(x, y)\n\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2 * math.cos(math.pi * i / 2), y + 2 * math.sin(math.pi * i / 2)\n\nprint(x, y)\n", "\nimport math\n\nn = int(input())\n\nx = 0\ny = 0\n\nfor i in range(n):\n    x, y = x + 2*math.cos(math.pi/6), y + 2*math.sin(math.pi/6)\n    print(x, y)\n\n"], "37": ["\nimport math\n\na, b, c = map(int, input().split())\n\nif a + b <= c:\n    print('Yes')\nelse:\n    print('No')\n\nprint(math.ceil(a/b) + math.ceil(c/b))\n\n", "\n", "\n", "\n", "\n", "\n", "\na,b,c=map(int,input().split())\nif a+b>c:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\na,b,c=map(int,input().split())\nif a+b<=c:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "\na,b,c = map(int,input().split())\n\nif a+b<=c:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "\n"], "38": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\n", "\n", "\n", "\n"], "39": ["\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max([len(s) - i for i in range(len(s)) if s[:i + 1]!= s[i + 1:][::-1]]))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s) - 1, len(s[::-1]) - 1))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s[::-1])-1))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\n", "\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s[::-1])-1))\n", "\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(max(s[i:j] for i in range(len(s)) for j in range(i, len(s)+1) if s[i:j]!= s[i:j][::-1])))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max([len(s)-i for i in range(len(s)) if s[:i+1]!= s[i+1:]]))\n\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s[::-1])-1))\n", "\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, max(map(len, (s[i:]+s[:i]) for i in range(len(s))))) )\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s[::-1])-1))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(len(s))\n", "\ns = input()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s[::-1])-1))\n", "\nimport sys\n\ns = sys.stdin.readline().strip()\n\nif s == s[::-1]:\n    print(0)\nelse:\n    print(max(len(s)-1, len(s)-2, len(s)-3, len(s)-4, len(s)-5, len(s)-6, len(s)-7, len(s)-8, len(s)-9, len(s)-10, len(s)-11, len(s)-12, len(s)-13, len(s)-14, len(s)-15, len(s)-16, len(s)-17, len(s)-18, len(s)-19, len(s)-20, len(s)-21, len(s)-22, len(s)-23, len(s)-24, len(s)-25, len(s)-26, len(s)-27, len(s)-28, len(s)-29, len(s)-30, len(s)-31, len(s)-32, len(s)-33, len(s)-34, len(s)-35, len(s)-36, len(s)-37, len(s)-38, len(s)-39, len(s)-40, len(s)-41, len(s)-42, len(s)-43, len(s)-44, len(s)-45, len(s)-46, len(s)-47, len(s)-48, len(s)-49, len(s)-50))\n"], "40": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    a, b = map(int, sys.stdin.readline().split())\n    if a > b:\n        print(\"unrated\")\n    elif a < b:\n        print(\"rated\")\n    else:\n        print(\"maybe\")\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "41": ["\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(i - a.index(0)))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    if a[i] == 0:\n        d.append(i)\n\nfor i in range(len(d)):\n    for j in range(i+1, len(d)):\n        if d[i] - d[j] == 0:\n            print(d[i], d[j])\n            break\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nd = [0] * n\n\nfor i in range(n):\n    for j in range(i):\n        if a[i] == 0:\n            d[i] = j\n            break\n\nfor i in range(n):\n    print(d[i], end=' ')\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nd.sort()\n\nfor i in range(n):\n    print(d[i], end ='')\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nd.sort()\n\nfor i in range(n):\n    print(d[i], end ='')\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] == 0:\n            d[i] = min(d[i], abs(j - i))\n        if a[j] == 0:\n            d[j] = min(d[j], abs(j - i))\n\nfor i in range(n):\n    print(d[i], end=' ')\n", "\nimport sys\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nd = []\n\nfor i in range(n):\n    d.append(abs(a[i] - 0))\n\nprint(*d)\n"], "42": ["\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i:i+j] == s[i+j:i+j+j]:\n            count += 1\n\nprint(count)\n\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i] == '1' and s[j] == '1':\n            if s[i+j] == '0':\n                count += 1\n\nprint(count)\n\n", "\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = sys.stdin.readline().strip()\n\nprint(len(set(s[i:] + s[:i] for i in range(n))))\n\n", "\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i] == '1' and s[j] == '1':\n            if i!= j:\n                count += 1\n\nprint(count)\n\n", "\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i:i+j] == s[i+j:i+j+j]:\n            count += 1\n\nprint(count)\n\n", "\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i] == '0':\n        if s[i+1] == '0':\n            count += 1\n        if s[i+1] == '1':\n            count += 1\n            \nprint(count)\n\n", "\n", "\nn = int(input())\ns = input()\n\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:] + s[:i] == s:\n        count += 1\n\nprint(count)\n", "\n", "\n", "\nn = int(input())\ns = input()\n\n", "\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if s[i:j] == s[j:i:-1]:\n            count += 1\n\nprint(count)\n\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i] == s[j] and s[i+j] == s[i+j+1]:\n            count += 1\n\nprint(count)\n\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i:i+j] == s[i+j:i+j+j]:\n            count += 1\n\nprint(count)\n\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(1,n+1):\n    for j in range(n-i+1):\n        if s[j:j+i] == s[j+i:j+2*i]:\n            count += 1\n\nprint(count)\n\n"], "43": ["\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0], x[1]))\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if vectors[i][0] * vectors[i][0] + vectors[i][1] * vectors[i][1] < vectors[j][0] * vectors[j][0] + vectors[j][1] * vectors[j][1]:\n            print(i + 1, j + 1)\n            break\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1] < 0:\n            print(i + 1, j + 1)\n            break\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\na = vectors[0]\nb = vectors[1]\n\nangle = math.atan2(a[1] - b[1], a[0] - b[0])\n\nprint(a[0], a[1], b[0], b[1], angle)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0], x[1]))\n\na = vectors[0]\nb = vectors[1]\n\nangle = math.atan2(a[1] - b[1], a[0] - b[0])\n\nprint(a[0], a[1], b[0], b[1], angle)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\na, b = 0, 0\n\nfor i in range(n):\n    if vectors[i][0] * vectors[i + 1][0] < 0:\n        a = i + 1\n    else:\n        b = i + 1\n        break\n\nprint(a, b)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\na = vectors[0][0]\nb = vectors[0][1]\n\nfor i in range(1, n):\n    x, y = vectors[i]\n    if math.fabs(x - a) > math.fabs(y - b):\n        a, b = b, a\n\nprint(a, b)\n\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    vectors.append([int(x) for x in input().split()])\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1] < 0:\n            print(i + 1, j + 1)\n            exit()\n\nprint(n, n)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0] ** 2 + x[1] ** 2, x[0]))\n\na = vectors[0]\nb = vectors[1]\n\nangle = math.atan2(a[1] - b[1], a[0] - b[0])\n\nprint(a[0], a[1], b[0], b[1], angle)\n", "\nimport math\n\ndef angle(x1, y1, x2, y2):\n    return math.atan2(y2 - y1, x2 - x1)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0] ** 2 + x[1] ** 2, x[0]))\n\nprint(vectors[0][0], vectors[0][1])\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\na = vectors[0][0]\nb = vectors[0][1]\n\nfor i in range(1, n):\n    if vectors[i][0] * vectors[i - 1][0] + vectors[i][1] * vectors[i - 1][1] < 0:\n        a = vectors[i][0]\n        b = vectors[i][1]\n\nprint(a, b)\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    vectors.append([int(x) for x in input().split()])\n\nvectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n\na = vectors[0][0]\nb = vectors[0][1]\n\nfor i in range(1, n):\n    if vectors[i][0] * vectors[i - 1][0] + vectors[i][1] * vectors[i - 1][1] > 0:\n        a = vectors[i][0]\n        b = vectors[i][1]\n        break\n\nprint(a, b)\n\n", "\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    vectors.append([int(x) for x in input().split()])\n\nvectors.sort(key=lambda x: x[0]**2 + x[1]**2)\n\nmin_angle = math.pi\n\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1] > 0:\n            angle = math.acos(vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1])\n            if angle < min_angle:\n                min_angle = angle\n                a = i+1\n                b = j+1\n\nprint(a, b)\n", "\nimport math\n\ndef find_min_angle(vectors):\n    vectors = sorted(vectors, key=lambda x: x[0] ** 2 + x[1] ** 2)\n    min_angle = math.pi\n    for i in range(len(vectors) - 1):\n        angle = math.atan2(vectors[i][1] - vectors[i + 1][1], vectors[i][0] - vectors[i + 1][0])\n        if angle < min_angle:\n            min_angle = angle\n    return min_angle", "\nimport math\n\nn = int(input())\n\nvectors = []\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0], x[1]))\n\nmin_angle = math.pi\n\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        if vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1] > 0:\n            angle = math.acos((vectors[i][0] * vectors[j][0] + vectors[i][1] * vectors[j][1]) / math.sqrt(\n                vectors[i][0] ** 2 + vectors[i][1] ** 2))\n            if angle < min_angle:\n                min_angle = angle\n                a = i + 1\n                b = j + 1\n\nprint(a, b)\n", "\nimport math\n\nn = int(input())\n\nvectors = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    vectors.append((x, y))\n\nvectors.sort(key=lambda x: (x[0], x[1]))\n\na = vectors[0][0]\nb = vectors[0][1]\n\nfor i in range(1, n):\n    x, y = vectors[i]\n    if (x - a) * (y - b) > 0:\n        a = x\n        b = y\n\nprint(a, b)\n\n", "\nimport math\n\ndef main():\n    n = int(input())\n    vectors = []\n    for i in range(n):\n        x, y = map(int, input().split())\n        vectors.append((x, y))\n    vectors.sort(key=lambda x: x[0] ** 2 + x[1] ** 2)\n    print(vectors[0][0], vectors[0][1])\n    print(vectors[1][0], vectors[1][1])\n\nif __name__ == \"__main__\":\n    main()\n\n"], "44": ["\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\n    exit()\n\nif a == 1:\n    print(d)\n    exit()\n\nif a == 2:\n    print(math.ceil(d / k))\n    exit()\n\nif a == 3:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)))\n    exit()\n\nif a == 4:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)) + math.ceil(d / (k * a)))\n    exit()\n\nif a == 5:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)) + math.ceil(d / (k * a)) + math.ceil(d / (k * a * b)))\n    exit()\n\nif a == 6:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)) + math.ceil(d / (k * a)) + math.ceil(d / (k * a * b)) + math.ceil(d / (k * a * b * b)))\n    exit()\n\nif a == 7:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)) + math.ceil(d / (k * a)) + math.ceil(d / (k * a * b)) + math.ceil(d / (k * a * b * b)) + math.ceil(d / (k * a * b * b * b)))\n    exit()\n\nif a == 8:\n    print(math.ceil(d / k) + math.ceil(d / (k * b)) + math.ceil(d / (k * a)) + math.ceil(d / (k * a * b)) + math.ceil(d / (k * a * b * b)) + math", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif a <= t:\n    print(math.ceil(d / k))\nelse:\n    print(math.ceil(d / k) + math.ceil((t - a) / b))\n", "\nfrom math import *\n\nd, k, a, b, t = map(int, input().split())\n\nif k + a > d:\n    print(ceil(d / k))\nelse:\n    print(ceil(d / k) + ceil(a / b))\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\ntime = math.ceil(d / k)\n\ntime += math.ceil(a / b)\n\nprint(time)\n\n", "\nfrom math import *\n\nd, k, a, b, t = map(int, input().split())\n\nif a < b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\n    exit()\n\nif a == 1:\n    print(d)\n    exit()\n\nif a == 2:\n    print(d + k)\n    exit()\n\nif a == 3:\n    print(d + k + (d - k) / 2)\n    exit()\n\nif a == 4:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2)\n    exit()\n\nif a == 5:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2 + (d - k) / 2 / 2 / 2)\n    exit()\n\nif a == 6:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2 + (d - k) / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2)\n    exit()\n\nif a == 7:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2 + (d - k) / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 / 2)\n    exit()\n\nif a == 8:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2 + (d - k) / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 / 2)\n    exit()\n\nif a == 9:\n    print(d + k + (d - k) / 2 + (d - k) / 2 / 2 + (d - k) / 2 / 2 / 2 + (d - k) / 2 / 2 / 2 / 2 + (d - k) / 2 / 2", "\nimport sys\n\nd, k, a, b, t = map(int, sys.stdin.readline().split())\n\nif t <= a:\n    print(d)\nelif t <= k:\n    print(d + (t - a))\nelse:\n    print(d + (k - a) + (t - k))\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif t == 0:\n    print(0)\n    exit()\n\nif a == 0:\n    print(math.ceil(d / k))\n    exit()\n\nif b == 0:\n    print(math.ceil(d / k))\n    exit()\n\nif a < b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(d / k))\n    exit()\n\nif a > b:\n    print(math.ceil(d / k))\n    exit()\n\nif a == b:\n    print(math.ceil(", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\ntime = math.ceil((d - k) / a) + math.ceil((d - k) / b)\n\nprint(time)\n\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\ntime = math.ceil(d / k) * a + math.ceil(d / k) * b + t\n\nprint(time)\n\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif a > b:\n    a, b = b, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    a, d = d, a\n\nif a < k:\n    a, k = k, a\n\nif a < b:\n    a, b = b, a\n\nif a > d:\n    ", "\nfrom math import inf\n\nd, k, a, b, t = map(int, input().split())\n\nif a > b:\n    a, b = b, a\n\nif a + b <= k:\n    print(inf)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a + b + t)\n    exit()\n\nif a + b <= d:\n    print(a + b + t)\n    exit()\n\nif a + b <= k:\n    print(a +", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif k > d:\n    print(math.ceil(t / a) + math.ceil(t / b))\nelse:\n    print(math.ceil(t / a))\n", "\nfrom math import *\n\nd, k, a, b, t = map(int, input().split())\n\nif d <= k:\n    print(0)\nelse:\n    if d - k <= a:\n        print(a)\n    else:\n        if d - k <= b:\n            print(a + (d - k - a) // 2)\n        else:\n            print(a + (d - k - a) // 2 + (d - k - a) // 2 + (d - k - a) // 2)\n", "\nfrom math import sqrt\n\nd, k, a, b, t = map(int, input().split())\n\nif k + a + b <= d:\n    print(0)\nelse:\n    print(int(sqrt(k + a + b) - sqrt(k + a) - sqrt(b) + sqrt(d)))\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif a < b:\n    print(math.ceil(d / k) + math.ceil(t / b))\nelse:\n    print(math.ceil(d / k) + math.ceil(t / a))\n", "\n", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\nif a < b:\n    a, b = b, a\n\nif a > t:\n    print(math.ceil(d / k) + math.ceil(t / b))\nelse:\n    print(math.ceil(d / k))\n", "\nfrom math import *\n\nd, k, a, b, t = map(int, input().split())\n\nif a < b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\n    exit()\n\nif k == 0:\n    print(0)\n    exit()\n\nif k == 1:\n    print(d)\n    exit()\n\nif k == 2:\n    print(d + b)\n    exit()\n\nif k == 3:\n    print(d + b + a)\n    exit()\n\nif k == 4:\n    print(d + b + a + sqrt(d**2 - 2*d*a + 2*a*b + b**2))\n    exit()\n\nif k == 5:\n    print(d + b + a + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + t)\n    exit()\n\nif k == 6:\n    print(d + b + a + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + t + sqrt(d**2 - 2*d*a + 2*a*b + b**2))\n    exit()\n\nif k == 7:\n    print(d + b + a + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + t + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + sqrt(d**2 - 2*d*a + 2*a*b + b**2))\n    exit()\n\nif k == 8:\n    print(d + b + a + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + t + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + sqrt(d**2 - 2*d*a + 2*a*b + b**2) + sqrt(d**2 - 2*d*a + 2*a*b + b**2))\n    exit()\n\nif k == 9:", "\nimport sys\n\nd, k, a, b, t = map(int, sys.stdin.readline().split())\n\nif a > b:\n    a, b = b, a\n\nif a == 0:\n    print(0)\n    sys.exit()\n\nif a > d:\n    print(0)\n    sys.exit()\n\nif a + b > d:\n    print(0)\n    sys.exit()\n\nif a + b + k > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k + t > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k + t + d > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k + t + d + k > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k + t + d + k + t > d:\n    print(0)\n    sys.exit()\n\nif a + b + k + t + d + k + t + d + k + t + d + k + t + d > d:\n    print(0)\n    sys.exit()", "\nimport math\n\nd, k, a, b, t = map(int, input().split())\n\ntime = math.ceil((d - k) / a) + math.ceil((d - k) / b)\n\nprint(time)\n\n"], "45": ["\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(n//k)\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(n // k)\nelse:\n    print(-1)\n\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n + 1) if i % k == 0])\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n+1) if i % k == 0])\nelse:\n    print(-1)\n\n", "\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(n//k)\nelse:\n    print(-1)\n", "\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(*range(1,k+1))\nelse:\n    print(-1)\n\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n+1) if i % k == 0])\nelse:\n    print(-1)\n\n", "\nn,k = map(int,input().split())\n\nif n%k == 0:\n    print(n//k)\n    exit()\n\nfor i in range(1,k+1):\n    if n%i == 0:\n        print(i)\n        exit()\n\nprint(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n + 1) if i % k == 0])\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n+1) if i % k == 0])\nelse:\n    print(-1)\n\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n+1) if i % k == 0])\nelse:\n    print(-1)\n\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*range(1, n+1, k))\nelse:\n    print(-1)\n", "\nn,k = map(int,input().split())\n\nif n%k==0:\n    print(*[i for i in range(1,n//k+1)])\nelse:\n    print(-1)\n\n", "\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nif n%k!=0:\n    while n%k!=0:\n        n=n-1\n    print(n//k)\n    exit()\n\nif n%k==0:\n    print(n//k)\n    ", "\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(n//k)\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(n // k)\n    exit()\n\nfor i in range(1, k + 1):\n    if n % i == 0:\n        print(i)\n\nprint(-1)\n\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*range(1, k+1))\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(n // k)\nelse:\n    print(-1)\n", "\nn, k = map(int, input().split())\n\nif n % k == 0:\n    print(*[i for i in range(1, n + 1) if i % k == 0])\nelse:\n    print(-1)\n", "\nn,k=map(int,input().split())\n\nif n%k==0:\n    print(n//k)\n    exit()\n\nfor i in range(1,k+1):\n    if n%i==0:\n        print(i)\n        exit()\n\nprint(-1)\n\n"], "46": ["\nn,m=map(int,input().split())\n\ncnt=0\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if (i+j)%5==0:\n            cnt+=1\nprint(cnt)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i+j) % 5 == 0:\n            count += 1\n\nprint(count)\n", "\nn,m=map(int,input().split())\n\ncount=0\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if i+j<=n and i+j>=1:\n            if (i+j)%5==0:\n                count+=1\n\nprint(count)\n", "\nn,m = map(int,input().split())\n\ncount = 0\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if (i+j)%5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n", "\nn,m=map(int,input().split())\n\nif n==1 and m==1:\n    print(1)\nelif n==1 and m==2:\n    print(1)\nelif n==2 and m==3:\n    print(1)\nelif n==2 and m==4:\n    print(1)\nelif n==3 and m==5:\n    print(1)\nelif n==3 and m==6:\n    print(1)\nelif n==4 and m==7:\n    print(1)\nelif n==4 and m==8:\n    print(1)\nelif n==5 and m==9:\n    print(1)\nelif n==5 and m==10:\n    print(1)\nelif n==6 and m==11:\n    print(1)\nelif n==6 and m==12:\n    print(1)\nelif n==7 and m==1:\n    print(1)\nelif n==7 and m==2:\n    print(1)\nelif n==7 and m==3:\n    print(1)\nelif n==7 and m==4:\n    print(1)\nelif n==7 and m==5:\n    print(1)\nelif n==7 and m==6:\n    print(1)\nelif n==7 and m==7:\n    print(1)\nelif n==7 and m==8:\n    print(1)\nelif n==7 and m==9:\n    print(1)\nelif n==7 and m==10:\n    print(1)\nelif n==7 and m==11:\n    print(1)\nelif n==7 and m==12:\n    print(1)\nelif n==8 and m==1:\n    print(1)\nelif n==8 and m==2:\n    print(1)\nelif n==8 and m==3:\n    print(1)\nelif n==8 and m==4:\n    print(1)\nelif n==8 and m==5:\n    print(1)\nelif n==8", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n", "\nn,m=map(int,input().split())\n\ncount=0\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if i+j==5:\n            count+=1\nprint(count)\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn,m=map(int,input().split())\n\ndef divisible(n,m):\n    count=0\n    for i in range(1,n+1):\n        for j in range(1,m+1):\n            if (i+j)%5==0:\n                count+=1\n    return count\n\nprint(divisible(n,m))\n", "\nn,m=map(int,input().split())\n\ncount=0\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if i+j==5:\n            count+=1\nprint(count)\n", "\nn,m=map(int,input().split())\n\ncount=0\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        if (i+j)%5==0:\n            count+=1\nprint(count)\n", "\nimport math\n\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n\n", "\nn, m = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if (i + j) % 5 == 0:\n            count += 1\n\nprint(count)\n"], "47": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\nimport sys\n\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\nbeauty = 0\n\nfor i in range(n):\n    beauty += a[i]\n    if i!= 0:\n        beauty = max(beauty, a[i] * a[i - 1])\n    if i!= n - 1:\n        beauty = max(beauty, a[i] * a[i + 1])\n\nprint(beauty * x)\n\n", "\n", "\n", "\n", "\n", "\nimport sys\n\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\nbeauty = 0\n\nfor i in range(n):\n    beauty += a[i]\n    if i > 0:\n        beauty = max(beauty, a[i] * a[i - 1])\n    if i < n - 1:\n        beauty = max(beauty, a[i] * a[i + 1])\n\nprint(beauty * x)\n\n", "\nimport sys\n\nn, x = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\n\nbeauty = 0\n\nfor i in range(n):\n    beauty += a[i] * x\n\nprint(beauty)\n", "\n", "\n", "\n"], "48": ["\nn, m, k = map(int, input().split())\n\ntable = [[0] * m for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        table[i][j] = i * j\n\nprint(table[k - 1][m - 1])\n\n", "\nn = int(input())\nm = int(input())\nk = int(input())\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\nk = 2\n\nn = 1\nm = 10\nk = 5\n\nn = 10\nm = 5\nk = 1\n\nn = 10\nm = 10\nk = 1\n\nn = 2\nm = 3\n", "\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\n\nprint(n*m)\n\n", "\n2 2 2\n\n2 3 4\n\n1 10 5\n\n5\n\n", "\n", "\n2\n\n", "\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn m k\n\nn", "\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\n\nprint(k)\n\n", "\n2\n\n", "\n2\n\n", "\n1\n\n", "\n2 2 2\n\n2 3 4\n\n1 10 5\n\n5\n\n", "\nn,m,k = map(int,input().split())\n\nn=n+1\nm=m+1\n\nfor i in range(1,n):\n    for j in range(1,m):\n        print(i*j,end=\" \")\n    print()\n\nprint(i*j)\n\n", "\n2\n\n", "\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\n\nprint(k)\n", "\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\n\nprint(n*m)\n\n", "\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n45\n\n46\n\n47\n\n48\n\n49\n\n50\n\n51\n\n52\n\n53\n\n54\n\n55\n\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n62\n\n63\n\n64\n\n65\n\n66\n\n67\n\n68\n\n69\n\n70\n\n71\n\n72\n\n73\n\n74\n\n75\n\n76\n\n77\n\n78\n\n79\n\n80\n\n81\n\n82\n\n83\n\n84\n\n85\n\n86\n\n87\n\n88\n\n89\n\n90\n\n91\n\n92\n\n93\n\n94\n\n95\n\n96\n\n97\n\n98\n\n99\n\n100\n\n101\n\n102\n\n103\n\n104\n\n105\n\n106\n\n107\n\n108\n\n109\n\n110\n\n111\n\n112\n\n113\n\n114\n\n115\n\n116\n\n117\n\n118\n\n119\n\n120\n\n121\n\n122\n\n123\n\n124\n\n125\n\n126\n\n127\n\n128\n\n129\n\n130\n\n131\n\n132\n\n133\n\n134\n\n135\n\n136\n\n137\n\n138\n\n139\n\n140\n\n141\n\n142\n\n143\n\n144\n\n145\n\n146\n\n147\n\n148\n\n149\n\n150\n\n151\n\n152\n\n153\n\n154\n\n155\n\n156\n\n157\n\n158\n\n159\n\n160\n\n161\n\n162\n\n163\n\n164\n\n165\n\n166\n\n167\n\n168\n\n169\n\n170\n\n171", "\n2\n\n", "\n2\n\n", "\nn,m,k=map(int,input().split())\n\nfor i in range(1,n+1):\n    for j in range(1,m+1):\n        print(i*j,end=\" \")\n    print()\n\nprint(i*j)\n\n"], "49": ["\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$", "\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 7.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789", "\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$", "\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$k$ is the position of the digit to be printed.\n\n$", "\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the", "\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the", "\n$k$-th digit of the infinite sequence is $k$-th digit of the resulting infinite sequence.\n\n", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 7.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789", "\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of the digit to print.\n\n$k$ is the position of", "\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to print the $k$-th digit of the sequence.\n\n$k$ is the position to", "\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of the infinite sequence is:\n\n$k$-th digit of", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n\n$k$-th digit of the infinite sequence starting with 123456789", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n", "\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the", "\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the position to process.\n\n$k$ is the", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5.\n", "\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 123456789101112131415161718192021222324252627282930313233343536 is 5\n\n$k$-th digit of the infinite sequence starting with 1234567891011121314151617181920212"]}